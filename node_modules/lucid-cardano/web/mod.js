Object.hasOwn||Object.defineProperty(Object,"hasOwn",{value:function(n,e){if(n==null)throw new TypeError("Cannot convert undefined or null to object");return Object.prototype.hasOwnProperty.call(Object(n),e)},configurable:!0,enumerable:!1,writable:!0});import*as o from"../esm/src/core/libs/cardano_multiplatform_lib/cardano_multiplatform_lib.generated.js";import*as E from"../esm/src/core/libs/cardano_message_signing/cardano_message_signing.generated.js";var me={name:"lucid-cardano",version:"0.10.7",license:"MIT",author:"Alessandro Konrad",description:"Lucid is a library, which allows you to create Cardano transactions and off-chain code for your Plutus contracts in JavaScript, Deno and Node.js.",repository:"https://github.com/spacebudz/lucid"};async function Ye(n,e){try{await n.instantiate({url:new URL(e,`https://deno.land/x/lucid@${me.version}/src/core/libs/`)})}catch{}}await Promise.all([Ye(o,"cardano_multiplatform_lib/cardano_multiplatform_lib_bg.wasm"),Ye(E,"cardano_message_signing/cardano_message_signing_bg.wasm")]);function Ze(n){let e=o.Costmdls.new(),t=o.CostModel.new();Object.values(n.PlutusV1).forEach((s,a)=>{t.set(a,o.Int.new(o.BigNum.from_str(s.toString())))}),e.insert(o.Language.new_plutus_v1(),t);let r=o.CostModel.new_plutus_v2();return Object.values(n.PlutusV2||[]).forEach((s,a)=>{r.set(a,o.Int.new(o.BigNum.from_str(s.toString())))}),e.insert(o.Language.new_plutus_v2(),r),e}var Qe={minFeeA:44,minFeeB:155381,maxTxSize:16384,maxValSize:5e3,keyDeposit:2000000n,poolDeposit:500000000n,priceMem:.0577,priceStep:721e-7,maxTxExMem:14000000n,maxTxExSteps:10000000000n,coinsPerUtxoByte:4310n,collateralPercentage:150,maxCollateralInputs:3,costModels:{PlutusV1:{"addInteger-cpu-arguments-intercept":205665,"addInteger-cpu-arguments-slope":812,"addInteger-memory-arguments-intercept":1,"addInteger-memory-arguments-slope":1,"appendByteString-cpu-arguments-intercept":1e3,"appendByteString-cpu-arguments-slope":571,"appendByteString-memory-arguments-intercept":0,"appendByteString-memory-arguments-slope":1,"appendString-cpu-arguments-intercept":1e3,"appendString-cpu-arguments-slope":24177,"appendString-memory-arguments-intercept":4,"appendString-memory-arguments-slope":1,"bData-cpu-arguments":1e3,"bData-memory-arguments":32,"blake2b_256-cpu-arguments-intercept":117366,"blake2b_256-cpu-arguments-slope":10475,"blake2b_256-memory-arguments":4,"cekApplyCost-exBudgetCPU":23e3,"cekApplyCost-exBudgetMemory":100,"cekBuiltinCost-exBudgetCPU":23e3,"cekBuiltinCost-exBudgetMemory":100,"cekConstCost-exBudgetCPU":23e3,"cekConstCost-exBudgetMemory":100,"cekDelayCost-exBudgetCPU":23e3,"cekDelayCost-exBudgetMemory":100,"cekForceCost-exBudgetCPU":23e3,"cekForceCost-exBudgetMemory":100,"cekLamCost-exBudgetCPU":23e3,"cekLamCost-exBudgetMemory":100,"cekStartupCost-exBudgetCPU":100,"cekStartupCost-exBudgetMemory":100,"cekVarCost-exBudgetCPU":23e3,"cekVarCost-exBudgetMemory":100,"chooseData-cpu-arguments":19537,"chooseData-memory-arguments":32,"chooseList-cpu-arguments":175354,"chooseList-memory-arguments":32,"chooseUnit-cpu-arguments":46417,"chooseUnit-memory-arguments":4,"consByteString-cpu-arguments-intercept":221973,"consByteString-cpu-arguments-slope":511,"consByteString-memory-arguments-intercept":0,"consByteString-memory-arguments-slope":1,"constrData-cpu-arguments":89141,"constrData-memory-arguments":32,"decodeUtf8-cpu-arguments-intercept":497525,"decodeUtf8-cpu-arguments-slope":14068,"decodeUtf8-memory-arguments-intercept":4,"decodeUtf8-memory-arguments-slope":2,"divideInteger-cpu-arguments-constant":196500,"divideInteger-cpu-arguments-model-arguments-intercept":453240,"divideInteger-cpu-arguments-model-arguments-slope":220,"divideInteger-memory-arguments-intercept":0,"divideInteger-memory-arguments-minimum":1,"divideInteger-memory-arguments-slope":1,"encodeUtf8-cpu-arguments-intercept":1e3,"encodeUtf8-cpu-arguments-slope":28662,"encodeUtf8-memory-arguments-intercept":4,"encodeUtf8-memory-arguments-slope":2,"equalsByteString-cpu-arguments-constant":245e3,"equalsByteString-cpu-arguments-intercept":216773,"equalsByteString-cpu-arguments-slope":62,"equalsByteString-memory-arguments":1,"equalsData-cpu-arguments-intercept":1060367,"equalsData-cpu-arguments-slope":12586,"equalsData-memory-arguments":1,"equalsInteger-cpu-arguments-intercept":208512,"equalsInteger-cpu-arguments-slope":421,"equalsInteger-memory-arguments":1,"equalsString-cpu-arguments-constant":187e3,"equalsString-cpu-arguments-intercept":1e3,"equalsString-cpu-arguments-slope":52998,"equalsString-memory-arguments":1,"fstPair-cpu-arguments":80436,"fstPair-memory-arguments":32,"headList-cpu-arguments":43249,"headList-memory-arguments":32,"iData-cpu-arguments":1e3,"iData-memory-arguments":32,"ifThenElse-cpu-arguments":80556,"ifThenElse-memory-arguments":1,"indexByteString-cpu-arguments":57667,"indexByteString-memory-arguments":4,"lengthOfByteString-cpu-arguments":1e3,"lengthOfByteString-memory-arguments":10,"lessThanByteString-cpu-arguments-intercept":197145,"lessThanByteString-cpu-arguments-slope":156,"lessThanByteString-memory-arguments":1,"lessThanEqualsByteString-cpu-arguments-intercept":197145,"lessThanEqualsByteString-cpu-arguments-slope":156,"lessThanEqualsByteString-memory-arguments":1,"lessThanEqualsInteger-cpu-arguments-intercept":204924,"lessThanEqualsInteger-cpu-arguments-slope":473,"lessThanEqualsInteger-memory-arguments":1,"lessThanInteger-cpu-arguments-intercept":208896,"lessThanInteger-cpu-arguments-slope":511,"lessThanInteger-memory-arguments":1,"listData-cpu-arguments":52467,"listData-memory-arguments":32,"mapData-cpu-arguments":64832,"mapData-memory-arguments":32,"mkCons-cpu-arguments":65493,"mkCons-memory-arguments":32,"mkNilData-cpu-arguments":22558,"mkNilData-memory-arguments":32,"mkNilPairData-cpu-arguments":16563,"mkNilPairData-memory-arguments":32,"mkPairData-cpu-arguments":76511,"mkPairData-memory-arguments":32,"modInteger-cpu-arguments-constant":196500,"modInteger-cpu-arguments-model-arguments-intercept":453240,"modInteger-cpu-arguments-model-arguments-slope":220,"modInteger-memory-arguments-intercept":0,"modInteger-memory-arguments-minimum":1,"modInteger-memory-arguments-slope":1,"multiplyInteger-cpu-arguments-intercept":69522,"multiplyInteger-cpu-arguments-slope":11687,"multiplyInteger-memory-arguments-intercept":0,"multiplyInteger-memory-arguments-slope":1,"nullList-cpu-arguments":60091,"nullList-memory-arguments":32,"quotientInteger-cpu-arguments-constant":196500,"quotientInteger-cpu-arguments-model-arguments-intercept":453240,"quotientInteger-cpu-arguments-model-arguments-slope":220,"quotientInteger-memory-arguments-intercept":0,"quotientInteger-memory-arguments-minimum":1,"quotientInteger-memory-arguments-slope":1,"remainderInteger-cpu-arguments-constant":196500,"remainderInteger-cpu-arguments-model-arguments-intercept":453240,"remainderInteger-cpu-arguments-model-arguments-slope":220,"remainderInteger-memory-arguments-intercept":0,"remainderInteger-memory-arguments-minimum":1,"remainderInteger-memory-arguments-slope":1,"sha2_256-cpu-arguments-intercept":806990,"sha2_256-cpu-arguments-slope":30482,"sha2_256-memory-arguments":4,"sha3_256-cpu-arguments-intercept":1927926,"sha3_256-cpu-arguments-slope":82523,"sha3_256-memory-arguments":4,"sliceByteString-cpu-arguments-intercept":265318,"sliceByteString-cpu-arguments-slope":0,"sliceByteString-memory-arguments-intercept":4,"sliceByteString-memory-arguments-slope":0,"sndPair-cpu-arguments":85931,"sndPair-memory-arguments":32,"subtractInteger-cpu-arguments-intercept":205665,"subtractInteger-cpu-arguments-slope":812,"subtractInteger-memory-arguments-intercept":1,"subtractInteger-memory-arguments-slope":1,"tailList-cpu-arguments":41182,"tailList-memory-arguments":32,"trace-cpu-arguments":212342,"trace-memory-arguments":32,"unBData-cpu-arguments":31220,"unBData-memory-arguments":32,"unConstrData-cpu-arguments":32696,"unConstrData-memory-arguments":32,"unIData-cpu-arguments":43357,"unIData-memory-arguments":32,"unListData-cpu-arguments":32247,"unListData-memory-arguments":32,"unMapData-cpu-arguments":38314,"unMapData-memory-arguments":32,"verifyEd25519Signature-cpu-arguments-intercept":9462713,"verifyEd25519Signature-cpu-arguments-slope":1021,"verifyEd25519Signature-memory-arguments":10},PlutusV2:{"addInteger-cpu-arguments-intercept":205665,"addInteger-cpu-arguments-slope":812,"addInteger-memory-arguments-intercept":1,"addInteger-memory-arguments-slope":1,"appendByteString-cpu-arguments-intercept":1e3,"appendByteString-cpu-arguments-slope":571,"appendByteString-memory-arguments-intercept":0,"appendByteString-memory-arguments-slope":1,"appendString-cpu-arguments-intercept":1e3,"appendString-cpu-arguments-slope":24177,"appendString-memory-arguments-intercept":4,"appendString-memory-arguments-slope":1,"bData-cpu-arguments":1e3,"bData-memory-arguments":32,"blake2b_256-cpu-arguments-intercept":117366,"blake2b_256-cpu-arguments-slope":10475,"blake2b_256-memory-arguments":4,"cekApplyCost-exBudgetCPU":23e3,"cekApplyCost-exBudgetMemory":100,"cekBuiltinCost-exBudgetCPU":23e3,"cekBuiltinCost-exBudgetMemory":100,"cekConstCost-exBudgetCPU":23e3,"cekConstCost-exBudgetMemory":100,"cekDelayCost-exBudgetCPU":23e3,"cekDelayCost-exBudgetMemory":100,"cekForceCost-exBudgetCPU":23e3,"cekForceCost-exBudgetMemory":100,"cekLamCost-exBudgetCPU":23e3,"cekLamCost-exBudgetMemory":100,"cekStartupCost-exBudgetCPU":100,"cekStartupCost-exBudgetMemory":100,"cekVarCost-exBudgetCPU":23e3,"cekVarCost-exBudgetMemory":100,"chooseData-cpu-arguments":19537,"chooseData-memory-arguments":32,"chooseList-cpu-arguments":175354,"chooseList-memory-arguments":32,"chooseUnit-cpu-arguments":46417,"chooseUnit-memory-arguments":4,"consByteString-cpu-arguments-intercept":221973,"consByteString-cpu-arguments-slope":511,"consByteString-memory-arguments-intercept":0,"consByteString-memory-arguments-slope":1,"constrData-cpu-arguments":89141,"constrData-memory-arguments":32,"decodeUtf8-cpu-arguments-intercept":497525,"decodeUtf8-cpu-arguments-slope":14068,"decodeUtf8-memory-arguments-intercept":4,"decodeUtf8-memory-arguments-slope":2,"divideInteger-cpu-arguments-constant":196500,"divideInteger-cpu-arguments-model-arguments-intercept":453240,"divideInteger-cpu-arguments-model-arguments-slope":220,"divideInteger-memory-arguments-intercept":0,"divideInteger-memory-arguments-minimum":1,"divideInteger-memory-arguments-slope":1,"encodeUtf8-cpu-arguments-intercept":1e3,"encodeUtf8-cpu-arguments-slope":28662,"encodeUtf8-memory-arguments-intercept":4,"encodeUtf8-memory-arguments-slope":2,"equalsByteString-cpu-arguments-constant":245e3,"equalsByteString-cpu-arguments-intercept":216773,"equalsByteString-cpu-arguments-slope":62,"equalsByteString-memory-arguments":1,"equalsData-cpu-arguments-intercept":1060367,"equalsData-cpu-arguments-slope":12586,"equalsData-memory-arguments":1,"equalsInteger-cpu-arguments-intercept":208512,"equalsInteger-cpu-arguments-slope":421,"equalsInteger-memory-arguments":1,"equalsString-cpu-arguments-constant":187e3,"equalsString-cpu-arguments-intercept":1e3,"equalsString-cpu-arguments-slope":52998,"equalsString-memory-arguments":1,"fstPair-cpu-arguments":80436,"fstPair-memory-arguments":32,"headList-cpu-arguments":43249,"headList-memory-arguments":32,"iData-cpu-arguments":1e3,"iData-memory-arguments":32,"ifThenElse-cpu-arguments":80556,"ifThenElse-memory-arguments":1,"indexByteString-cpu-arguments":57667,"indexByteString-memory-arguments":4,"lengthOfByteString-cpu-arguments":1e3,"lengthOfByteString-memory-arguments":10,"lessThanByteString-cpu-arguments-intercept":197145,"lessThanByteString-cpu-arguments-slope":156,"lessThanByteString-memory-arguments":1,"lessThanEqualsByteString-cpu-arguments-intercept":197145,"lessThanEqualsByteString-cpu-arguments-slope":156,"lessThanEqualsByteString-memory-arguments":1,"lessThanEqualsInteger-cpu-arguments-intercept":204924,"lessThanEqualsInteger-cpu-arguments-slope":473,"lessThanEqualsInteger-memory-arguments":1,"lessThanInteger-cpu-arguments-intercept":208896,"lessThanInteger-cpu-arguments-slope":511,"lessThanInteger-memory-arguments":1,"listData-cpu-arguments":52467,"listData-memory-arguments":32,"mapData-cpu-arguments":64832,"mapData-memory-arguments":32,"mkCons-cpu-arguments":65493,"mkCons-memory-arguments":32,"mkNilData-cpu-arguments":22558,"mkNilData-memory-arguments":32,"mkNilPairData-cpu-arguments":16563,"mkNilPairData-memory-arguments":32,"mkPairData-cpu-arguments":76511,"mkPairData-memory-arguments":32,"modInteger-cpu-arguments-constant":196500,"modInteger-cpu-arguments-model-arguments-intercept":453240,"modInteger-cpu-arguments-model-arguments-slope":220,"modInteger-memory-arguments-intercept":0,"modInteger-memory-arguments-minimum":1,"modInteger-memory-arguments-slope":1,"multiplyInteger-cpu-arguments-intercept":69522,"multiplyInteger-cpu-arguments-slope":11687,"multiplyInteger-memory-arguments-intercept":0,"multiplyInteger-memory-arguments-slope":1,"nullList-cpu-arguments":60091,"nullList-memory-arguments":32,"quotientInteger-cpu-arguments-constant":196500,"quotientInteger-cpu-arguments-model-arguments-intercept":453240,"quotientInteger-cpu-arguments-model-arguments-slope":220,"quotientInteger-memory-arguments-intercept":0,"quotientInteger-memory-arguments-minimum":1,"quotientInteger-memory-arguments-slope":1,"remainderInteger-cpu-arguments-constant":196500,"remainderInteger-cpu-arguments-model-arguments-intercept":453240,"remainderInteger-cpu-arguments-model-arguments-slope":220,"remainderInteger-memory-arguments-intercept":0,"remainderInteger-memory-arguments-minimum":1,"remainderInteger-memory-arguments-slope":1,"serialiseData-cpu-arguments-intercept":1159724,"serialiseData-cpu-arguments-slope":392670,"serialiseData-memory-arguments-intercept":0,"serialiseData-memory-arguments-slope":2,"sha2_256-cpu-arguments-intercept":806990,"sha2_256-cpu-arguments-slope":30482,"sha2_256-memory-arguments":4,"sha3_256-cpu-arguments-intercept":1927926,"sha3_256-cpu-arguments-slope":82523,"sha3_256-memory-arguments":4,"sliceByteString-cpu-arguments-intercept":265318,"sliceByteString-cpu-arguments-slope":0,"sliceByteString-memory-arguments-intercept":4,"sliceByteString-memory-arguments-slope":0,"sndPair-cpu-arguments":85931,"sndPair-memory-arguments":32,"subtractInteger-cpu-arguments-intercept":205665,"subtractInteger-cpu-arguments-slope":812,"subtractInteger-memory-arguments-intercept":1,"subtractInteger-memory-arguments-slope":1,"tailList-cpu-arguments":41182,"tailList-memory-arguments":32,"trace-cpu-arguments":212342,"trace-memory-arguments":32,"unBData-cpu-arguments":31220,"unBData-memory-arguments":32,"unConstrData-cpu-arguments":32696,"unConstrData-memory-arguments":32,"unIData-cpu-arguments":43357,"unIData-memory-arguments":32,"unListData-cpu-arguments":32247,"unListData-memory-arguments":32,"unMapData-cpu-arguments":38314,"unMapData-memory-arguments":32,"verifyEcdsaSecp256k1Signature-cpu-arguments":35892428,"verifyEcdsaSecp256k1Signature-memory-arguments":10,"verifyEd25519Signature-cpu-arguments-intercept":57996947,"verifyEd25519Signature-cpu-arguments-slope":18975,"verifyEd25519Signature-memory-arguments":10,"verifySchnorrSecp256k1Signature-cpu-arguments-intercept":38887044,"verifySchnorrSecp256k1Signature-cpu-arguments-slope":32947,"verifySchnorrSecp256k1Signature-memory-arguments":10}}};var et=new TextEncoder().encode("0123456789abcdef");function Ut(n){return new Error("encoding/hex: invalid byte: "+new TextDecoder().decode(new Uint8Array([n])))}function Dt(){return new Error("encoding/hex: odd length hex string")}function qe(n){if(48<=n&&n<=57)return n-48;if(97<=n&&n<=102)return n-97+10;if(65<=n&&n<=70)return n-65+10;throw Ut(n)}function jt(n){return n*2}function Nt(n){let e=new Uint8Array(jt(n.length));for(let t=0;t<e.length;t++){let r=n[t];e[t*2]=et[r>>4],e[t*2+1]=et[r&15]}return e}function tt(n){return new TextDecoder().decode(Nt(n))}function Ke(n){let e=new Uint8Array(Mt(n.length));for(let t=0;t<e.length;t++){let r=qe(n[t*2]),s=qe(n[t*2+1]);e[t]=r<<4|s}if(n.length%2==1)throw qe(n[e.length*2]),Dt();return e}function Mt(n){return n>>>1}function rt(n){return Ke(new TextEncoder().encode(n))}var k=function(n,e,t,r,s){if(r==="m")throw new TypeError("Private method is not writable");if(r==="a"&&!s)throw new TypeError("Private accessor was defined without a setter");if(typeof e=="function"?n!==e||!s:!e.has(n))throw new TypeError("Cannot write private member to an object whose class did not declare it");return r==="a"?s.call(n,t):s?s.value=t:e.set(n,t),t},m=function(n,e,t,r){if(t==="a"&&!r)throw new TypeError("Private accessor was defined without a getter");if(typeof e=="function"?n!==e||!r:!e.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return t==="m"?r:t==="a"?r.call(n):r?r.value:e.get(n)},re,ie,L,pe,be,V,F,J,X,G,Y,Z,Q,ue,fe,se,Ee,ne,Rt,$t,qt,Kt,g="0123456789abcdef".split(""),Lt=[-2147483648,8388608,32768,128],K=[24,16,8,0],Ce=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],H=[],ge=class{constructor(e=!1,t=!1){re.set(this,void 0),ie.set(this,void 0),L.set(this,void 0),pe.set(this,void 0),be.set(this,void 0),V.set(this,void 0),F.set(this,void 0),J.set(this,void 0),X.set(this,void 0),G.set(this,void 0),Y.set(this,void 0),Z.set(this,void 0),Q.set(this,void 0),ue.set(this,void 0),fe.set(this,void 0),se.set(this,void 0),Ee.set(this,0),ne.set(this,void 0),this.init(e,t)}init(e,t){t?(H[0]=H[16]=H[1]=H[2]=H[3]=H[4]=H[5]=H[6]=H[7]=H[8]=H[9]=H[10]=H[11]=H[12]=H[13]=H[14]=H[15]=0,k(this,ie,H,"f")):k(this,ie,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f"),e?(k(this,V,3238371032,"f"),k(this,F,914150663,"f"),k(this,J,812702999,"f"),k(this,X,4144912697,"f"),k(this,G,4290775857,"f"),k(this,Y,1750603025,"f"),k(this,Z,1694076839,"f"),k(this,Q,3204075428,"f")):(k(this,V,1779033703,"f"),k(this,F,3144134277,"f"),k(this,J,1013904242,"f"),k(this,X,2773480762,"f"),k(this,G,1359893119,"f"),k(this,Y,2600822924,"f"),k(this,Z,528734635,"f"),k(this,Q,1541459225,"f")),k(this,re,k(this,ne,k(this,L,k(this,fe,0,"f"),"f"),"f"),"f"),k(this,pe,k(this,ue,!1,"f"),"f"),k(this,be,!0,"f"),k(this,se,e,"f")}update(e){if(m(this,pe,"f"))return this;let t;e instanceof ArrayBuffer?t=new Uint8Array(e):t=e;let r=0,s=t.length,a=m(this,ie,"f");for(;r<s;){let i;if(m(this,ue,"f")&&(k(this,ue,!1,"f"),a[0]=m(this,re,"f"),a[16]=a[1]=a[2]=a[3]=a[4]=a[5]=a[6]=a[7]=a[8]=a[9]=a[10]=a[11]=a[12]=a[13]=a[14]=a[15]=0),typeof t!="string")for(i=m(this,ne,"f");r<s&&i<64;++r)a[i>>2]|=t[r]<<K[i++&3];else for(i=m(this,ne,"f");r<s&&i<64;++r){let u=t.charCodeAt(r);u<128?a[i>>2]|=u<<K[i++&3]:u<2048?(a[i>>2]|=(192|u>>6)<<K[i++&3],a[i>>2]|=(128|u&63)<<K[i++&3]):u<55296||u>=57344?(a[i>>2]|=(224|u>>12)<<K[i++&3],a[i>>2]|=(128|u>>6&63)<<K[i++&3],a[i>>2]|=(128|u&63)<<K[i++&3]):(u=65536+((u&1023)<<10|t.charCodeAt(++r)&1023),a[i>>2]|=(240|u>>18)<<K[i++&3],a[i>>2]|=(128|u>>12&63)<<K[i++&3],a[i>>2]|=(128|u>>6&63)<<K[i++&3],a[i>>2]|=(128|u&63)<<K[i++&3])}k(this,Ee,i,"f"),k(this,L,m(this,L,"f")+(i-m(this,ne,"f")),"f"),i>=64?(k(this,re,a[16],"f"),k(this,ne,i-64,"f"),this.hash(),k(this,ue,!0,"f")):k(this,ne,i,"f")}return m(this,L,"f")>4294967295&&(k(this,fe,m(this,fe,"f")+(m(this,L,"f")/4294967296<<0),"f"),k(this,L,m(this,L,"f")%4294967296,"f")),this}finalize(){if(m(this,pe,"f"))return;k(this,pe,!0,"f");let e=m(this,ie,"f"),t=m(this,Ee,"f");e[16]=m(this,re,"f"),e[t>>2]|=Lt[t&3],k(this,re,e[16],"f"),t>=56&&(m(this,ue,"f")||this.hash(),e[0]=m(this,re,"f"),e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=m(this,fe,"f")<<3|m(this,L,"f")>>>29,e[15]=m(this,L,"f")<<3,this.hash()}hash(){let e=m(this,V,"f"),t=m(this,F,"f"),r=m(this,J,"f"),s=m(this,X,"f"),a=m(this,G,"f"),i=m(this,Y,"f"),u=m(this,Z,"f"),c=m(this,Q,"f"),x=m(this,ie,"f"),y,I,B,f,C,S,w,O,A,q;for(let P=16;P<64;++P)f=x[P-15],y=(f>>>7|f<<25)^(f>>>18|f<<14)^f>>>3,f=x[P-2],I=(f>>>17|f<<15)^(f>>>19|f<<13)^f>>>10,x[P]=x[P-16]+y+x[P-7]+I<<0;q=t&r;for(let P=0;P<64;P+=4)m(this,be,"f")?(m(this,se,"f")?(w=300032,f=x[0]-1413257819,c=f-150054599<<0,s=f+24177077<<0):(w=704751109,f=x[0]-210244248,c=f-1521486534<<0,s=f+143694565<<0),k(this,be,!1,"f")):(y=(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10),I=(a>>>6|a<<26)^(a>>>11|a<<21)^(a>>>25|a<<7),w=e&t,B=w^e&r^q,S=a&i^~a&u,f=c+I+S+Ce[P]+x[P],C=y+B,c=s+f<<0,s=f+C<<0),y=(s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10),I=(c>>>6|c<<26)^(c>>>11|c<<21)^(c>>>25|c<<7),O=s&e,B=O^s&t^w,S=c&a^~c&i,f=u+I+S+Ce[P+1]+x[P+1],C=y+B,u=r+f<<0,r=f+C<<0,y=(r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10),I=(u>>>6|u<<26)^(u>>>11|u<<21)^(u>>>25|u<<7),A=r&s,B=A^r&e^O,S=u&c^~u&a,f=i+I+S+Ce[P+2]+x[P+2],C=y+B,i=t+f<<0,t=f+C<<0,y=(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10),I=(i>>>6|i<<26)^(i>>>11|i<<21)^(i>>>25|i<<7),q=t&r,B=q^t&s^A,S=i&u^~i&c,f=a+I+S+Ce[P+3]+x[P+3],C=y+B,a=e+f<<0,e=f+C<<0;k(this,V,m(this,V,"f")+e<<0,"f"),k(this,F,m(this,F,"f")+t<<0,"f"),k(this,J,m(this,J,"f")+r<<0,"f"),k(this,X,m(this,X,"f")+s<<0,"f"),k(this,G,m(this,G,"f")+a<<0,"f"),k(this,Y,m(this,Y,"f")+i<<0,"f"),k(this,Z,m(this,Z,"f")+u<<0,"f"),k(this,Q,m(this,Q,"f")+c<<0,"f")}hex(){this.finalize();let e=m(this,V,"f"),t=m(this,F,"f"),r=m(this,J,"f"),s=m(this,X,"f"),a=m(this,G,"f"),i=m(this,Y,"f"),u=m(this,Z,"f"),c=m(this,Q,"f"),x=g[e>>28&15]+g[e>>24&15]+g[e>>20&15]+g[e>>16&15]+g[e>>12&15]+g[e>>8&15]+g[e>>4&15]+g[e&15]+g[t>>28&15]+g[t>>24&15]+g[t>>20&15]+g[t>>16&15]+g[t>>12&15]+g[t>>8&15]+g[t>>4&15]+g[t&15]+g[r>>28&15]+g[r>>24&15]+g[r>>20&15]+g[r>>16&15]+g[r>>12&15]+g[r>>8&15]+g[r>>4&15]+g[r&15]+g[s>>28&15]+g[s>>24&15]+g[s>>20&15]+g[s>>16&15]+g[s>>12&15]+g[s>>8&15]+g[s>>4&15]+g[s&15]+g[a>>28&15]+g[a>>24&15]+g[a>>20&15]+g[a>>16&15]+g[a>>12&15]+g[a>>8&15]+g[a>>4&15]+g[a&15]+g[i>>28&15]+g[i>>24&15]+g[i>>20&15]+g[i>>16&15]+g[i>>12&15]+g[i>>8&15]+g[i>>4&15]+g[i&15]+g[u>>28&15]+g[u>>24&15]+g[u>>20&15]+g[u>>16&15]+g[u>>12&15]+g[u>>8&15]+g[u>>4&15]+g[u&15];return m(this,se,"f")||(x+=g[c>>28&15]+g[c>>24&15]+g[c>>20&15]+g[c>>16&15]+g[c>>12&15]+g[c>>8&15]+g[c>>4&15]+g[c&15]),x}toString(){return this.hex()}digest(){this.finalize();let e=m(this,V,"f"),t=m(this,F,"f"),r=m(this,J,"f"),s=m(this,X,"f"),a=m(this,G,"f"),i=m(this,Y,"f"),u=m(this,Z,"f"),c=m(this,Q,"f"),x=[e>>24&255,e>>16&255,e>>8&255,e&255,t>>24&255,t>>16&255,t>>8&255,t&255,r>>24&255,r>>16&255,r>>8&255,r&255,s>>24&255,s>>16&255,s>>8&255,s&255,a>>24&255,a>>16&255,a>>8&255,a&255,i>>24&255,i>>16&255,i>>8&255,i&255,u>>24&255,u>>16&255,u>>8&255,u&255];return m(this,se,"f")||x.push(c>>24&255,c>>16&255,c>>8&255,c&255),x}array(){return this.digest()}arrayBuffer(){this.finalize();let e=new ArrayBuffer(m(this,se,"f")?28:32),t=new DataView(e);return t.setUint32(0,m(this,V,"f")),t.setUint32(4,m(this,F,"f")),t.setUint32(8,m(this,J,"f")),t.setUint32(12,m(this,X,"f")),t.setUint32(16,m(this,G,"f")),t.setUint32(20,m(this,Y,"f")),t.setUint32(24,m(this,Z,"f")),m(this,se,"f")||t.setUint32(28,m(this,Q,"f")),e}};re=new WeakMap,ie=new WeakMap,L=new WeakMap,pe=new WeakMap,be=new WeakMap,V=new WeakMap,F=new WeakMap,J=new WeakMap,X=new WeakMap,G=new WeakMap,Y=new WeakMap,Z=new WeakMap,Q=new WeakMap,ue=new WeakMap,fe=new WeakMap,se=new WeakMap,Ee=new WeakMap,ne=new WeakMap;Rt=new WeakMap,$t=new WeakMap,qt=new WeakMap,Kt=new WeakMap;var st="Invalid mnemonic",ce="Invalid entropy",zt="Invalid mnemonic checksum",nt=`A wordlist is required but a default could not be found.
Please pass a 2048 word array explicitly.`;function at(n,e){if(e=e||dt,!e)throw new Error(nt);let t=Ft(n).split(" ");if(t.length%3!==0)throw new Error(st);let r=t.map(y=>{let I=e.indexOf(y);if(I===-1)throw new Error(st);return ut(I.toString(2),"0",11)}).join(""),s=Math.floor(r.length/33)*32,a=r.slice(0,s),i=r.slice(s),u=a.match(/(.{1,8})/g).map(lt);if(u.length<16)throw new Error(ce);if(u.length>32)throw new Error(ce);if(u.length%4!==0)throw new Error(ce);let c=new Uint8Array(u);if(it(c)!==i)throw new Error(zt);return p(c)}function Wt(n){let r=new Uint8Array(n);if(n>4294967295)throw new RangeError("requested too many random bytes");if(n>0)if(n>65536)for(let s=0;s<n;s+=65536)crypto.getRandomValues(r.slice(s,s+65536));else crypto.getRandomValues(r);return r}function ot(n,e,t){if(n=n||128,n%32!==0)throw new TypeError(ce);return e=e||Wt,Vt(e(n/8),t)}function Vt(n,e){if(e=e||dt,!e)throw new Error(nt);if(n.length<16)throw new TypeError(ce);if(n.length>32)throw new TypeError(ce);if(n.length%4!==0)throw new TypeError(ce);let t=ct(Array.from(n)),r=it(n),i=(t+r).match(/(.{1,11})/g).map(u=>{let c=lt(u);return e[c]});return e[0]==="\u3042\u3044\u3053\u304F\u3057\u3093"?i.join("\u3000"):i.join(" ")}function it(n){let t=n.length*8/32,r=new ge().update(n).digest();return ct(Array.from(r)).slice(0,t)}function ut(n,e,t){for(;n.length<t;)n=e+n;return n}function ct(n){return n.map(e=>ut(e.toString(2),"0",8)).join("")}function Ft(n){return(n||"").normalize("NFKD")}function lt(n){return parseInt(n,2)}var dt=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"];var Le=[0,7,14,9,28,27,18,21,56,63,54,49,36,35,42,45,112,119,126,121,108,107,98,101,72,79,70,65,84,83,90,93,224,231,238,233,252,251,242,245,216,223,214,209,196,195,202,205,144,151,158,153,140,139,130,133,168,175,166,161,180,179,186,189,199,192,201,206,219,220,213,210,255,248,241,246,227,228,237,234,183,176,185,190,171,172,165,162,143,136,129,134,147,148,157,154,39,32,41,46,59,60,53,50,31,24,17,22,3,4,13,10,87,80,89,94,75,76,69,66,111,104,97,102,115,116,125,122,137,142,135,128,149,146,155,156,177,182,191,184,173,170,163,164,249,254,247,240,229,226,235,236,193,198,207,200,221,218,211,212,105,110,103,96,117,114,123,124,81,86,95,88,77,74,67,68,25,30,23,16,5,2,11,12,33,38,47,40,61,58,51,52,78,73,64,71,82,85,92,91,118,113,120,127,106,109,100,99,62,57,48,55,34,37,44,43,6,1,8,15,26,29,20,19,174,169,160,167,178,181,188,187,150,145,152,159,138,141,132,131,222,217,208,215,194,197,204,203,230,225,232,239,250,253,244,243];typeof Int32Array<"u"&&(Le=new Int32Array(Le));function ht(n,e=0){let t=~~e;for(let r=0;r<n.length;r++)t=Le[(t^n[r])&255]&255;return t}var ye={Mainnet:{zeroTime:1596059091e3,zeroSlot:4492800,slotLength:1e3},Preview:{zeroTime:1666656e6,zeroSlot:0,slotLength:1e3},Preprod:{zeroTime:16557696e5,zeroSlot:86400,slotLength:1e3},Custom:{zeroTime:0,zeroSlot:0,slotLength:0}};function mt(n,e){let t=(n-e.zeroSlot)*e.slotLength;return e.zeroTime+t}function pt(n,e){let t=n-e.zeroTime;return Math.floor(t/e.slotLength)+e.zeroSlot}var v=Symbol.for("TypeBox.Kind"),le=Symbol.for("TypeBox.Hint"),U=Symbol.for("TypeBox.Modifier"),Jt=0,ze=class{ReadonlyOptional(e){return{[U]:"ReadonlyOptional",...e}}Readonly(e){return{[U]:"Readonly",...e}}Optional(e){return{[U]:"Optional",...e}}Any(e={}){return this.Create({...e,[v]:"Any"})}Array(e,t={}){return this.Create({...t,[v]:"Array",type:"array",items:e})}Boolean(e={}){return this.Create({...e,[v]:"Boolean",type:"boolean"})}ConstructorParameters(e,t={}){return this.Tuple([...e.parameters],{...t})}Constructor(e,t,r={}){if(e[v]==="Tuple"){let s=e.items===void 0?[]:e.items;return this.Create({...r,[v]:"Constructor",type:"object",instanceOf:"Constructor",parameters:s,returns:t})}else{if(globalThis.Array.isArray(e))return this.Create({...r,[v]:"Constructor",type:"object",instanceOf:"Constructor",parameters:e,returns:t});throw new Error("TypeBuilder.Constructor: Invalid parameters")}}Date(e={}){return this.Create({...e,[v]:"Date",type:"object",instanceOf:"Date"})}Enum(e,t={}){let s=Object.keys(e).filter(a=>isNaN(a)).map(a=>e[a]).map(a=>typeof a=="string"?{[v]:"Literal",type:"string",const:a}:{[v]:"Literal",type:"number",const:a});return this.Create({...t,[v]:"Union",[le]:"Enum",anyOf:s})}Function(e,t,r={}){if(e[v]==="Tuple"){let s=e.items===void 0?[]:e.items;return this.Create({...r,[v]:"Function",type:"object",instanceOf:"Function",parameters:s,returns:t})}else{if(globalThis.Array.isArray(e))return this.Create({...r,[v]:"Function",type:"object",instanceOf:"Function",parameters:e,returns:t});throw new Error("TypeBuilder.Function: Invalid parameters")}}InstanceType(e,t={}){return{...t,...this.Clone(e.returns)}}Integer(e={}){return this.Create({...e,[v]:"Integer",type:"integer"})}Intersect(e,t={}){let r=u=>u[U]&&u[U]==="Optional"||u[U]==="ReadonlyOptional",[s,a]=[new Set,new Set];for(let u of e)for(let[c,x]of Object.entries(u.properties))r(x)&&a.add(c);for(let u of e)for(let c of Object.keys(u.properties))a.has(c)||s.add(c);let i={};for(let u of e)for(let[c,x]of Object.entries(u.properties))i[c]=i[c]===void 0?x:{[v]:"Union",anyOf:[i[c],{...x}]};return s.size>0?this.Create({...t,[v]:"Object",type:"object",properties:i,required:[...s]}):this.Create({...t,[v]:"Object",type:"object",properties:i})}KeyOf(e,t={}){let r=Object.keys(e.properties).map(s=>this.Create({...t,[v]:"Literal",type:"string",const:s}));return this.Create({...t,[v]:"Union",[le]:"KeyOf",anyOf:r})}Literal(e,t={}){return this.Create({...t,[v]:"Literal",const:e,type:typeof e})}Never(e={}){return this.Create({...e,[v]:"Never",allOf:[{type:"boolean",const:!1},{type:"boolean",const:!0}]})}Null(e={}){return this.Create({...e,[v]:"Null",type:"null"})}Number(e={}){return this.Create({...e,[v]:"Number",type:"number"})}Object(e,t={}){let r=Object.keys(e),s=r.filter(i=>{let c=e[i][U];return c&&(c==="Optional"||c==="ReadonlyOptional")}),a=r.filter(i=>!s.includes(i));return a.length>0?this.Create({...t,[v]:"Object",type:"object",properties:e,required:a}):this.Create({...t,[v]:"Object",type:"object",properties:e})}Omit(e,t,r={}){let s=t[v]==="Union"?t.anyOf.map(i=>i.const):t,a={...this.Clone(e),...r,[le]:"Omit"};a.required&&(a.required=a.required.filter(i=>!s.includes(i)),a.required.length===0&&delete a.required);for(let i of Object.keys(a.properties))s.includes(i)&&delete a.properties[i];return this.Create(a)}Parameters(e,t={}){return j.Tuple(e.parameters,{...t})}Partial(e,t={}){let r={...this.Clone(e),...t,[le]:"Partial"};delete r.required;for(let s of Object.keys(r.properties)){let a=r.properties[s];switch(a[U]){case"ReadonlyOptional":a[U]="ReadonlyOptional";break;case"Readonly":a[U]="ReadonlyOptional";break;case"Optional":a[U]="Optional";break;default:a[U]="Optional";break}}return this.Create(r)}Pick(e,t,r={}){let s=t[v]==="Union"?t.anyOf.map(i=>i.const):t,a={...this.Clone(e),...r,[le]:"Pick"};a.required&&(a.required=a.required.filter(i=>s.includes(i)),a.required.length===0&&delete a.required);for(let i of Object.keys(a.properties))s.includes(i)||delete a.properties[i];return this.Create(a)}Promise(e,t={}){return this.Create({...t,[v]:"Promise",type:"object",instanceOf:"Promise",item:e})}Record(e,t,r={}){if(e[v]==="Union")return this.Object(e.anyOf.reduce((a,i)=>({...a,[i.const]:t}),{}),{...r,[le]:"Record"});let s=["Integer","Number"].includes(e[v])?"^(0|[1-9][0-9]*)$":e[v]==="String"&&e.pattern?e.pattern:"^.*$";return this.Create({...r,[v]:"Record",type:"object",patternProperties:{[s]:t},additionalProperties:!1})}Recursive(e,t={}){t.$id===void 0&&(t.$id=`T${Jt++}`);let r=e({[v]:"Self",$ref:`${t.$id}`});return r.$id=t.$id,this.Create({...t,...r})}Ref(e,t={}){if(e.$id===void 0)throw Error("TypeBuilder.Ref: Referenced schema must specify an $id");return this.Create({...t,[v]:"Ref",$ref:e.$id})}RegEx(e,t={}){return this.Create({...t,[v]:"String",type:"string",pattern:e.source})}Required(e,t={}){let r={...this.Clone(e),...t,[le]:"Required"};r.required=Object.keys(r.properties);for(let s of Object.keys(r.properties)){let a=r.properties[s];switch(a[U]){case"ReadonlyOptional":a[U]="Readonly";break;case"Readonly":a[U]="Readonly";break;case"Optional":delete a[U];break;default:delete a[U];break}}return this.Create(r)}ReturnType(e,t={}){return{...t,...this.Clone(e.returns)}}Strict(e){return JSON.parse(JSON.stringify(e))}String(e={}){return this.Create({...e,[v]:"String",type:"string"})}Tuple(e,t={}){let s=e.length,a=e.length,i=e.length>0?{...t,[v]:"Tuple",type:"array",items:e,additionalItems:!1,minItems:s,maxItems:a}:{...t,[v]:"Tuple",type:"array",minItems:s,maxItems:a};return this.Create(i)}Undefined(e={}){return this.Create({...e,[v]:"Undefined",type:"null",typeOf:"Undefined"})}Union(e,t={}){return e.length===0?j.Never({...t}):this.Create({...t,[v]:"Union",anyOf:e})}Uint8Array(e={}){return this.Create({...e,[v]:"Uint8Array",type:"object",instanceOf:"Uint8Array"})}Unknown(e={}){return this.Create({...e,[v]:"Unknown"})}Unsafe(e={}){return this.Create({...e,[v]:e[v]||"Unsafe"})}Void(e={}){return this.Create({...e,[v]:"Void",type:"null",typeOf:"Void"})}Create(e){return e}Clone(e){let t=s=>typeof s=="object"&&s!==null&&!Array.isArray(s),r=s=>typeof s=="object"&&s!==null&&Array.isArray(s);return t(e)?Object.keys(e).reduce((s,a)=>({...s,[a]:this.Clone(e[a])}),Object.getOwnPropertySymbols(e).reduce((s,a)=>({...s,[a]:this.Clone(e[a])}),{})):r(e)?e.map(s=>this.Clone(s)):e}},j=new ze;var D=class{constructor(e,t){Object.defineProperty(this,"index",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"fields",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.index=e,this.fields=t}},ee={Integer:function(n){let e=j.Unsafe({dataType:"integer"});return n&&Object.entries(n).forEach(([t,r])=>{e[t]=r}),e},Bytes:function(n){let e=j.Unsafe({dataType:"bytes"});return n&&Object.entries(n).forEach(([t,r])=>{e[t]=r}),e},Boolean:function(){return j.Unsafe({anyOf:[{title:"False",dataType:"constructor",index:0,fields:[]},{title:"True",dataType:"constructor",index:1,fields:[]}]})},Any:function(){return j.Unsafe({description:"Any Data."})},Array:function(n,e){let t=j.Array(n);return _e(t,{dataType:"list",items:n}),e&&Object.entries(e).forEach(([r,s])=>{t[r]=s}),t},Map:function(n,e,t){let r=j.Unsafe({dataType:"map",keys:n,values:e});return t&&Object.entries(t).forEach(([s,a])=>{r[s]=a}),r},Object:function(n,e){let t=j.Object(n);return _e(t,{anyOf:[{dataType:"constructor",index:0,fields:Object.entries(n).map(([r,s])=>({...s,title:r}))}]}),t.anyOf[0].hasConstr=typeof e?.hasConstr>"u"||e.hasConstr,t},Enum:function(n){let e=j.Union(n);return _e(e,{anyOf:n.map((t,r)=>t.anyOf[0].fields.length===0?{...t.anyOf[0],index:r}:{dataType:"constructor",title:(()=>{let s=t.anyOf[0].fields[0].title;if(s.charAt(0)!==s.charAt(0).toUpperCase())throw new Error(`Enum '${s}' needs to start with an uppercase letter.`);return t.anyOf[0].fields[0].title})(),index:r,fields:t.anyOf[0].fields[0].items||t.anyOf[0].fields[0].anyOf[0].fields})}),e},Tuple:function(n,e){let t=j.Tuple(n);return _e(t,{dataType:"list",items:n}),e&&Object.entries(e).forEach(([r,s])=>{t[r]=s}),t},Literal:function(n){if(n.charAt(0)!==n.charAt(0).toUpperCase())throw new Error(`Enum '${n}' needs to start with an uppercase letter.`);let e=j.Literal(n);return _e(e,{anyOf:[{dataType:"constructor",title:n,index:0,fields:[]}]}),e},Nullable:function(n){return j.Unsafe({anyOf:[{title:"Some",description:"An optional value.",dataType:"constructor",index:0,fields:[n]},{title:"None",description:"Nothing.",dataType:"constructor",index:1,fields:[]}]})},to:Xt,from:Gt,fromJson:Yt,toJson:Zt,void:function(){return"d87980"},castFrom:M,castTo:z};function Xt(n,e){function t(s){try{if(typeof s=="bigint")return o.PlutusData.new_integer(o.BigInt.from_str(s.toString()));if(typeof s=="string")return o.PlutusData.new_bytes(d(s));if(s instanceof D){let{index:a,fields:i}=s,u=o.PlutusList.new();return i.forEach(c=>u.add(t(c))),o.PlutusData.new_constr_plutus_data(o.ConstrPlutusData.new(o.BigNum.from_str(a.toString()),u))}else if(s instanceof Array){let a=o.PlutusList.new();return s.forEach(i=>a.add(t(i))),o.PlutusData.new_list(a)}else if(s instanceof Map){let a=o.PlutusMap.new();for(let[i,u]of s.entries())a.insert(t(i),t(u));return o.PlutusData.new_map(a)}throw new Error("Unsupported type")}catch(a){throw new Error("Could not serialize the data: "+a)}}let r=e?z(n,e):n;return p(t(r).to_bytes())}function Gt(n,e){function t(s){if(s.kind()===0){let a=s.as_constr_plutus_data(),i=a.data(),u=[];for(let c=0;c<i.len();c++)u.push(t(i.get(c)));return new D(parseInt(a.alternative().to_str()),u)}else if(s.kind()===1){let a=s.as_map(),i=new Map,u=a.keys();for(let c=0;c<u.len();c++)i.set(t(u.get(c)),t(a.get(u.get(c))));return i}else if(s.kind()===2){let a=s.as_list(),i=[];for(let u=0;u<a.len();u++)i.push(t(a.get(u)));return i}else{if(s.kind()===3)return BigInt(s.as_integer().to_str());if(s.kind()===4)return p(s.as_bytes())}throw new Error("Unsupported type")}let r=t(o.PlutusData.from_bytes(d(n)));return e?M(r,e):r}function Yt(n){function e(t){if(typeof t=="string")return t.startsWith("0x")?p(d(t.slice(2))):kt(t);if(typeof t=="number")return BigInt(t);if(typeof t=="bigint")return t;if(t instanceof Array)return t.map(r=>e(r));if(t instanceof Object){let r=new Map;return Object.entries(t).forEach(([s,a])=>{r.set(e(s),e(a))}),r}throw new Error("Unsupported type")}return e(n)}function Zt(n){function e(t){if(typeof t=="bigint"||typeof t=="number"||typeof t=="string"&&!isNaN(parseInt(t))&&t.slice(-1)==="n"){let r=typeof t=="string"?BigInt(t.slice(0,-1)):t;return parseInt(r.toString())}if(typeof t=="string")try{return new TextDecoder(void 0,{fatal:!0}).decode(d(t))}catch{return"0x"+p(d(t))}if(t instanceof Array)return t.map(r=>e(r));if(t instanceof Map){let r={};return t.forEach((s,a)=>{let i=e(a);if(typeof i!="string"&&typeof i!="number")throw new Error("Unsupported type (Note: Only bytes or integers can be keys of a JSON object)");r[i]=e(s)}),r}throw new Error("Unsupported type (Note: Constructor cannot be converted to JSON)")}return e(n)}function M(n,e){let t=e;if(!t)throw new Error("Could not type cast data.");switch((t.anyOf?"enum":"")||t.dataType){case"integer":{if(typeof n!="bigint")throw new Error("Could not type cast to integer.");return ft(n,t),n}case"bytes":{if(typeof n!="string")throw new Error("Could not type cast to bytes.");return gt(n,t),n}case"constructor":{if(bt(t)){if(!(n instanceof D)||n.index!==0||n.fields.length!==0)throw new Error("Could not type cast to void.");return}else if(n instanceof D&&n.index===t.index&&(t.hasConstr||t.hasConstr===void 0)){let s={};if(t.fields.length!==n.fields.length)throw new Error("Could not type cast to object. Fields do not match.");return t.fields.forEach((a,i)=>{let u=a.title||"wrapper";if(/[A-Z]/.test(u[0]))throw new Error("Could not type cast to object. Object properties need to start with a lowercase letter.");s[u]=M(n.fields[i],a)}),s}else if(n instanceof Array&&!t.hasConstr&&t.hasConstr!==void 0){let s={};if(t.fields.length!==n.length)throw new Error("Could not ype cast to object. Fields do not match.");return t.fields.forEach((a,i)=>{let u=a.title||"wrapper";if(/[A-Z]/.test(u[0]))throw new Error("Could not type cast to object. Object properties need to start with a lowercase letter.");s[u]=M(n[i],a)}),s}throw new Error("Could not type cast to object.")}case"enum":{if(t.anyOf.length===1)return M(n,t.anyOf[0]);if(!(n instanceof D))throw new Error("Could not type cast to enum.");let s=t.anyOf.find(a=>a.index===n.index);if(!s||s.fields.length!==n.fields.length)throw new Error("Could not type cast to enum.");if(wt(t)){if(n.fields.length!==0)throw new Error("Could not type cast to boolean.");switch(n.index){case 0:return!1;case 1:return!0}throw new Error("Could not type cast to boolean.")}else if(_t(t)){switch(n.index){case 0:{if(n.fields.length!==1)throw new Error("Could not type cast to nullable object.");return M(n.fields[0],t.anyOf[0].fields[0])}case 1:{if(n.fields.length!==0)throw new Error("Could not type cast to nullable object.");return null}}throw new Error("Could not type cast to nullable object.")}switch(s.dataType){case"constructor":if(s.fields.length===0){if(/[A-Z]/.test(s.title[0]))return s.title;throw new Error("Could not type cast to enum.")}else{if(!/[A-Z]/.test(s.title))throw new Error("Could not type cast to enum. Enums need to start with an uppercase letter.");if(s.fields.length!==n.fields.length)throw new Error("Could not type cast to enum.");let a=s.fields[0].title?Object.fromEntries(s.fields.map((i,u)=>[i.title,M(n.fields[u],i)])):s.fields.map((i,u)=>M(n.fields[u],i));return{[s.title]:a}}}throw new Error("Could not type cast to enum.")}case"list":if(t.items instanceof Array){if(n instanceof D&&n.index===0&&t.hasConstr)return n.fields.map((s,a)=>M(s,t.items[a]));if(n instanceof Array&&!t.hasConstr)return n.map((s,a)=>M(s,t.items[a]));throw new Error("Could not type cast to tuple.")}else{if(!(n instanceof Array))throw new Error("Could not type cast to array.");return yt(n,t),n.map(s=>M(s,t.items))}case"map":{if(!(n instanceof Map))throw new Error("Could not type cast to map.");xt(n,t);let s=new Map;for(let[a,i]of n.entries())s.set(M(a,t.keys),M(i,t.values));return s}case void 0:return n}throw new Error("Could not type cast data.")}function z(n,e){let t=e;if(!t)throw new Error("Could not type cast struct.");switch((t.anyOf?"enum":"")||t.dataType){case"integer":{if(typeof n!="bigint")throw new Error("Could not type cast to integer.");return ft(n,t),n}case"bytes":{if(typeof n!="string")throw new Error("Could not type cast to bytes.");return gt(n,t),n}case"constructor":{if(bt(t)){if(n!==void 0)throw new Error("Could not type cast to void.");return new D(0,[])}else if(typeof n!="object"||n===null||t.fields.length!==Object.keys(n).length)throw new Error("Could not type cast to constructor.");let s=t.fields.map(a=>z(n[a.title||"wrapper"],a));return t.hasConstr||t.hasConstr===void 0?new D(t.index,s):s}case"enum":{if(t.anyOf.length===1)return z(n,t.anyOf[0]);if(wt(t)){if(typeof n!="boolean")throw new Error("Could not type cast to boolean.");return new D(n?1:0,[])}else if(_t(t)){if(n===null)return new D(1,[]);{let s=t.anyOf[0].fields;if(s.length!==1)throw new Error("Could not type cast to nullable object.");return new D(0,[z(n,s[0])])}}switch(typeof n){case"string":{if(!/[A-Z]/.test(n[0]))throw new Error("Could not type cast to enum. Enum needs to start with an uppercase letter.");let s=t.anyOf.findIndex(a=>a.dataType==="constructor"&&a.fields.length===0&&a.title===n);if(s===-1)throw new Error("Could not type cast to enum.");return new D(s,[])}case"object":{if(n===null)throw new Error("Could not type cast to enum.");let s=Object.keys(n)[0];if(!/[A-Z]/.test(s))throw new Error("Could not type cast to enum. Enum needs to start with an uppercase letter.");let a=t.anyOf.find(u=>u.dataType==="constructor"&&u.title===s);if(!a)throw new Error("Could not type cast to enum.");let i=n[s];return new D(a.index,i instanceof Array?i.map((u,c)=>z(u,a.fields[c])):a.fields.map(u=>{let[c,x]=Object.entries(i).find(([y])=>y===u.title);return z(x,u)}))}}throw new Error("Could not type cast to enum.")}case"list":{if(!(n instanceof Array))throw new Error("Could not type cast to array/tuple.");if(t.items instanceof Array){let s=n.map((a,i)=>z(a,t.items[i]));return t.hasConstr?new D(0,s):s}else return yt(n,t),n.map(s=>z(s,t.items))}case"map":{if(!(n instanceof Map))throw new Error("Could not type cast to map.");xt(n,t);let s=new Map;for(let[a,i]of n.entries())s.set(z(a,t.keys),z(i,t.values));return s}case void 0:return n}throw new Error("Could not type cast struct.")}function ft(n,e){if(e.minimum&&n<BigInt(e.minimum))throw new Error(`Integer ${n} is below the minimum ${e.minimum}.`);if(e.maximum&&n>BigInt(e.maximum))throw new Error(`Integer ${n} is above the maxiumum ${e.maximum}.`);if(e.exclusiveMinimum&&n<=BigInt(e.exclusiveMinimum))throw new Error(`Integer ${n} is below the exclusive minimum ${e.exclusiveMinimum}.`);if(e.exclusiveMaximum&&n>=BigInt(e.exclusiveMaximum))throw new Error(`Integer ${n} is above the exclusive maximum ${e.exclusiveMaximum}.`)}function gt(n,e){if(e.enum&&!e.enum.some(t=>t===n))throw new Error(`None of the keywords match with '${n}'.`);if(e.minLength&&n.length/2<e.minLength)throw new Error(`Bytes need to have a length of at least ${e.minLength} bytes.`);if(e.maxLength&&n.length/2>e.maxLength)throw new Error(`Bytes can have a length of at most ${e.minLength} bytes.`)}function yt(n,e){if(e.minItems&&n.length<e.minItems)throw new Error(`Array needs to contain at least ${e.minItems} items.`);if(e.maxItems&&n.length>e.maxItems)throw new Error(`Array can contain at most ${e.maxItems} items.`);if(e.uniqueItems&&new Set(n).size!==n.length)throw new Error("Array constains duplicates.")}function xt(n,e){if(e.minItems&&n.size<e.minItems)throw new Error(`Map needs to contain at least ${e.minItems} items.`);if(e.maxItems&&n.size>e.maxItems)throw new Error(`Map can contain at most ${e.maxItems} items.`)}function wt(n){return n.anyOf&&n.anyOf[0]?.title==="False"&&n.anyOf[1]?.title==="True"}function bt(n){return n.index===0&&n.fields.length===0}function _t(n){return n.anyOf&&n.anyOf[0]?.title==="Some"&&n.anyOf[1]?.title==="None"}function _e(n,e){Object.keys(n).forEach(t=>{delete n[t]}),Object.assign(n,e)}var Be=class{constructor(e){Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e}validatorToAddress(e,t){let r=this.validatorToScriptHash(e);return t?o.BaseAddress.new(ae(this.lucid.network),o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(r)),t.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(t.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(t.hash))).to_address().to_bech32(void 0):o.EnterpriseAddress.new(ae(this.lucid.network),o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(r))).to_address().to_bech32(void 0)}credentialToAddress(e,t){return t?o.BaseAddress.new(ae(this.lucid.network),e.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(e.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(e.hash)),t.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(t.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(t.hash))).to_address().to_bech32(void 0):o.EnterpriseAddress.new(ae(this.lucid.network),e.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(e.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(e.hash))).to_address().to_bech32(void 0)}validatorToRewardAddress(e){let t=this.validatorToScriptHash(e);return o.RewardAddress.new(ae(this.lucid.network),o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(t))).to_address().to_bech32(void 0)}credentialToRewardAddress(e){return o.RewardAddress.new(ae(this.lucid.network),e.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(e.hash)):o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(e.hash))).to_address().to_bech32(void 0)}validatorToScriptHash(e){switch(e.type){case"Native":return o.NativeScript.from_bytes(d(e.script)).hash(o.ScriptHashNamespace.NativeScript).to_hex();case"PlutusV1":return o.PlutusScript.from_bytes(d($(e.script))).hash(o.ScriptHashNamespace.PlutusV1).to_hex();case"PlutusV2":return o.PlutusScript.from_bytes(d($(e.script))).hash(o.ScriptHashNamespace.PlutusV2).to_hex();default:throw new Error("No variant matched")}}mintingPolicyToId(e){return this.validatorToScriptHash(e)}datumToHash(e){return o.hash_plutus_data(o.PlutusData.from_bytes(d(e))).to_hex()}scriptHashToCredential(e){return{type:"Script",hash:e}}keyHashToCredential(e){return{type:"Key",hash:e}}generatePrivateKey(){return er()}generateSeedPhrase(){return tr()}unixTimeToSlot(e){return pt(e,ye[this.lucid.network])}slotToUnixTime(e){return mt(e,ye[this.lucid.network])}getAddressDetails(e){return N(e)}nativeScriptFromJson(e){return or(e)}paymentCredentialOf(e){return oe(e)}stakeCredentialOf(e){return Qt(e)}};function Te(n){try{return o.Address.from_bytes(d(n))}catch{try{return o.Address.from_bech32(n)}catch{throw new Error("Could not deserialize address.")}}}function N(n){try{let e=o.BaseAddress.from_address(Te(n)),t=e.payment_cred().kind()===0?{type:"Key",hash:p(e.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:p(e.payment_cred().to_scripthash().to_bytes())},r=e.stake_cred().kind()===0?{type:"Key",hash:p(e.stake_cred().to_keyhash().to_bytes())}:{type:"Script",hash:p(e.stake_cred().to_scripthash().to_bytes())};return{type:"Base",networkId:e.to_address().network_id(),address:{bech32:e.to_address().to_bech32(void 0),hex:p(e.to_address().to_bytes())},paymentCredential:t,stakeCredential:r}}catch{}try{let e=o.EnterpriseAddress.from_address(Te(n)),t=e.payment_cred().kind()===0?{type:"Key",hash:p(e.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:p(e.payment_cred().to_scripthash().to_bytes())};return{type:"Enterprise",networkId:e.to_address().network_id(),address:{bech32:e.to_address().to_bech32(void 0),hex:p(e.to_address().to_bytes())},paymentCredential:t}}catch{}try{let e=o.PointerAddress.from_address(Te(n)),t=e.payment_cred().kind()===0?{type:"Key",hash:p(e.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:p(e.payment_cred().to_scripthash().to_bytes())};return{type:"Pointer",networkId:e.to_address().network_id(),address:{bech32:e.to_address().to_bech32(void 0),hex:p(e.to_address().to_bytes())},paymentCredential:t}}catch{}try{let e=o.RewardAddress.from_address(Te(n)),t=e.payment_cred().kind()===0?{type:"Key",hash:p(e.payment_cred().to_keyhash().to_bytes())}:{type:"Script",hash:p(e.payment_cred().to_scripthash().to_bytes())};return{type:"Reward",networkId:e.to_address().network_id(),address:{bech32:e.to_address().to_bech32(void 0),hex:p(e.to_address().to_bytes())},stakeCredential:t}}catch{}try{let e=(t=>{try{return o.ByronAddress.from_bytes(d(t))}catch{try{return o.ByronAddress.from_base58(t)}catch{throw new Error("Could not deserialize address.")}}})(n);return{type:"Byron",networkId:e.network_id(),address:{bech32:"",hex:p(e.to_address().to_bytes())}}}catch{}throw new Error("No address type matched for: "+n)}function oe(n){let{paymentCredential:e}=N(n);if(!e)throw new Error("The specified address does not contain a payment credential.");return e}function Qt(n){let{stakeCredential:e}=N(n);if(!e)throw new Error("The specified address does not contain a stake credential.");return e}function er(){return o.PrivateKey.generate_ed25519().to_bech32()}function tr(){return ot(256)}function rr(n){let e={};e.lovelace=BigInt(n.coin().to_str());let t=n.multiasset();if(t){let r=t.keys();for(let s=0;s<r.len();s++){let a=r.get(s),i=t.get(a),u=i.keys();for(let c=0;c<u.len();c++){let x=u.get(c),y=i.get(x),I=p(a.to_bytes())+p(x.name());e[I]=BigInt(y.to_str())}}}return e}function Pe(n){let e=o.MultiAsset.new(),t=n.lovelace,r=Object.keys(n);Array.from(new Set(r.filter(i=>i!=="lovelace").map(i=>i.slice(0,56)))).forEach(i=>{let u=r.filter(x=>x.slice(0,56)===i),c=o.Assets.new();u.forEach(x=>{c.insert(o.AssetName.new(d(x.slice(56))),o.BigNum.from_str(n[x].toString()))}),e.insert(o.ScriptHash.from_bytes(d(i)),c)});let a=o.Value.new(o.BigNum.from_str(t?t.toString():"0"));return(r.length>1||!t)&&a.set_multiasset(e),a}function sr(n){switch(n.get().kind()){case 0:return{type:"Native",script:p(n.get().as_native().to_bytes())};case 1:return{type:"PlutusV1",script:p(n.get().as_plutus_v1().to_bytes())};case 2:return{type:"PlutusV2",script:p(n.get().as_plutus_v2().to_bytes())};default:throw new Error("No variant matched.")}}function We(n){switch(n.type){case"Native":return o.ScriptRef.new(o.Script.new_native(o.NativeScript.from_bytes(d(n.script))));case"PlutusV1":return o.ScriptRef.new(o.Script.new_plutus_v1(o.PlutusScript.from_bytes(d($(n.script)))));case"PlutusV2":return o.ScriptRef.new(o.Script.new_plutus_v2(o.PlutusScript.from_bytes(d($(n.script)))));default:throw new Error("No variant matched.")}}function de(n){let e=(()=>{try{return o.Address.from_bech32(n.address)}catch{return o.ByronAddress.from_base58(n.address).to_address()}})(),t=o.TransactionOutput.new(e,Pe(n.assets));return n.datumHash&&t.set_datum(o.Datum.new_data_hash(o.DataHash.from_bytes(d(n.datumHash)))),!n.datumHash&&n.datum&&t.set_datum(o.Datum.new_data(o.Data.new(o.PlutusData.from_bytes(d(n.datum))))),n.scriptRef&&t.set_script_ref(We(n.scriptRef)),o.TransactionUnspentOutput.new(o.TransactionInput.new(o.TransactionHash.from_bytes(d(n.txHash)),o.BigNum.from_str(n.outputIndex.toString())),t)}function Oe(n){return{txHash:p(n.input().transaction_id().to_bytes()),outputIndex:parseInt(n.input().index().to_str()),assets:rr(n.output().amount()),address:n.output().address().as_byron()?n.output().address().as_byron()?.to_base58():n.output().address().to_bech32(void 0),datumHash:n.output()?.datum()?.as_data_hash()?.to_hex(),datum:n.output()?.datum()?.as_data()&&p(n.output().datum().as_data().get().to_bytes()),scriptRef:n.output()?.script_ref()&&sr(n.output().script_ref())}}function ae(n){switch(n){case"Preview":return 0;case"Preprod":return 0;case"Custom":return 0;case"Mainnet":return 1;default:throw new Error("Network not found")}}function d(n){return rt(n)}function p(n){return tt(n)}function Dr(n){return new TextDecoder().decode(Ke(new TextEncoder().encode(n)))}function kt(n){return p(new TextEncoder().encode(n))}function jr(n){return o.PrivateKey.from_bech32(n).to_public().to_bech32()}function vt(n){return ht(d(n)).toString(16).padStart(2,"0")}function nr(n){if(n<0||n>65535)throw new Error(`Label ${n} out of range: min label 1 - max label 65535.`);let e=n.toString(16).padStart(4,"0");return"0"+e+vt(e)+"0"}function ar(n){if(n.length!==8||!(n[0]==="0"&&n[7]==="0"))return null;let e=n.slice(1,5),t=parseInt(e,16);return n.slice(5,7)===vt(e)?t:null}function St(n,e,t){let r=Number.isInteger(t)?nr(t):"",s=e||"";if((s+r).length>64)throw new Error("Asset name size exceeds 32 bytes.");if(n.length!==56)throw new Error(`Policy id invalid: ${n}.`);return n+r+s}function ke(n){let e=n.slice(0,56),t=n.slice(56)||null,r=ar(n.slice(56,64)),s=(()=>(Number.isInteger(r)?n.slice(64):n.slice(56))||null)();return{policyId:e,assetName:t,name:s,label:r}}function or(n){return{type:"Native",script:p(o.encode_json_str_to_native_script(JSON.stringify(n),"",o.ScriptSchema.Node).to_bytes())}}function Nr(n,e,t){let r=t?ee.castTo(e,t):e;return p(o.apply_params_to_plutus_script(o.PlutusList.from_bytes(d(ee.to(r))),o.PlutusScript.from_bytes(d($(n)))).to_bytes())}function $(n){try{return o.PlutusScript.from_bytes(o.PlutusScript.from_bytes(d(n)).bytes()),n}catch{return p(o.PlutusScript.new(d(n)).to_bytes())}}function Mr(...n){return n.reduce((e,t)=>{for(let r in t)Object.hasOwn(t,r)&&(e[r]=(e[r]||0n)+t[r]);return e},{})}function ir(n,e){if(n.length!==e.length)return!1;for(let t=0;t<e.length;t++)if(n[t]!==e[t])return!1;return!0}function ur(n,e){if(n.length!==e.length)return!1;let t=n.length,r=Math.floor(t/4),s=new Uint32Array(n.buffer,0,r),a=new Uint32Array(e.buffer,0,r);for(let i=r*4;i<t;i++)if(n[i]!==e[i])return!1;for(let i=0;i<s.length;i++)if(s[i]!==a[i])return!1;return!0}function Ae(n,e){return n.length<1e3?ir(n,e):ur(n,e)}function It(...n){let e=0;for(let s of n)e+=s.length;let t=new Uint8Array(e),r=0;for(let s of n)t.set(s,r),r+=s.length;return t}var Ue=class{constructor(e){Object.defineProperty(this,"root",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.root=Ue.buildRecursively(e.map(t=>He(t)))}static fromHashes(e){return new this(e)}static buildRecursively(e){if(e.length<=0)return null;if(e.length===1)return{node:e[0],left:null,right:null};let t=Math.floor(e.length/2),[r,s]=[e.slice(0,t),e.slice(t)],a=this.buildRecursively(r),i=this.buildRecursively(s);return a===null||i===null?null:{node:Ve(a.node,i.node),left:a,right:i}}rootHash(){if(this.root===null)throw new Error("Merkle tree root hash not found.");return this.root.node}getProof(e){let t=He(e),r=[],s=a=>{if(a&&Ae(a.node,t))return!0;if(a?.right&&s(a.left))return r.push({right:a.right.node}),!0;if(a?.left&&s(a.right))return r.push({left:a.left.node}),!0};return s(this.root),r}size(){let e=t=>t===null?0:1+e(t.left)+e(t.right);return e(this.root)}static verify(e,t,r){let s=He(e),a=(i,u)=>{if(u.length<=0)return Ae(t,i);let[c,x]=[u[0],u.slice(1)];return c.left?a(Ve(c.left,i),x):c.right?a(Ve(i,c.right),x):!1};return a(s,r)}toString(){let e=t=>t===null?null:{node:p(t.node),left:e(t.left),right:e(t.right)};return JSON.stringify(e(this.root),null,2)}};function He(n){return new Uint8Array(new ge().update(n).arrayBuffer())}function Ve(n,e){return He(It(n,e))}var De=class{constructor(e,t){Object.defineProperty(this,"txSigned",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e,this.txSigned=t}async submit(){return await(this.lucid.wallet||this.lucid.provider).submitTx(p(this.txSigned.to_bytes()))}toString(){return p(this.txSigned.to_bytes())}toHash(){return o.hash_transaction(this.txSigned.body()).to_hex()}};var xe=class{constructor(e,t){Object.defineProperty(this,"txComplete",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"witnessSetBuilder",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"tasks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"fee",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"exUnits",{enumerable:!0,configurable:!0,writable:!0,value:null}),this.lucid=e,this.txComplete=t,this.witnessSetBuilder=o.TransactionWitnessSetBuilder.new(),this.tasks=[],this.fee=parseInt(t.body().fee().to_str());let r=t.witness_set().redeemers();if(r){let s={cpu:0,mem:0};for(let a=0;a<r.len();a++){let i=r.get(a);s.cpu+=parseInt(i.ex_units().steps().to_str()),s.mem+=parseInt(i.ex_units().mem().to_str())}this.exUnits=s}}sign(){return this.tasks.push(async()=>{let e=await this.lucid.wallet.signTx(this.txComplete);this.witnessSetBuilder.add_existing(e)}),this}signWithPrivateKey(e){let t=o.PrivateKey.from_bech32(e),r=o.make_vkey_witness(o.hash_transaction(this.txComplete.body()),t);return this.witnessSetBuilder.add_vkey(r),this}async partialSign(){let e=await this.lucid.wallet.signTx(this.txComplete);return this.witnessSetBuilder.add_existing(e),p(e.to_bytes())}partialSignWithPrivateKey(e){let t=o.PrivateKey.from_bech32(e),r=o.make_vkey_witness(o.hash_transaction(this.txComplete.body()),t);this.witnessSetBuilder.add_vkey(r);let s=o.TransactionWitnessSetBuilder.new();return s.add_vkey(r),p(s.build().to_bytes())}assemble(e){return e.forEach(t=>{let r=o.TransactionWitnessSet.from_bytes(d(t));this.witnessSetBuilder.add_existing(r)}),this}async complete(){for(let t of this.tasks)await t();this.witnessSetBuilder.add_existing(this.txComplete.witness_set());let e=o.Transaction.new(this.txComplete.body(),this.witnessSetBuilder.build(),this.txComplete.auxiliary_data());return new De(this.lucid,e)}toString(){return p(this.txComplete.to_bytes())}toHash(){return o.hash_transaction(this.txComplete.body()).to_hex()}};var Ne=class{constructor(e){Object.defineProperty(this,"txBuilder",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"tasks",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e,this.txBuilder=o.TransactionBuilder.new(this.lucid.txBuilderConfig),this.tasks=[]}readFrom(e){return this.tasks.push(async t=>{for(let r of e){if(r.datumHash){r.datum=ee.to(await t.lucid.datumOf(r));let a=o.PlutusData.from_bytes(d(r.datum));t.txBuilder.add_plutus_data(a)}let s=de(r);t.txBuilder.add_reference_input(s)}}),this}collectFrom(e,t){return this.tasks.push(async r=>{for(let s of e){s.datumHash&&!s.datum&&(s.datum=ee.to(await r.lucid.datumOf(s)));let a=de(s);r.txBuilder.add_input(a,t&&o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(t)),s.datumHash&&s.datum?o.PlutusData.from_bytes(d(s.datum)):void 0,void 0)))}}),this}mintAssets(e,t){return this.tasks.push(r=>{let s=Object.keys(e),a=s[0].slice(0,56),i=o.MintAssets.new();s.forEach(c=>{if(c.slice(0,56)!==a)throw new Error("Only one policy id allowed. You can chain multiple mintAssets functions together if you need to mint assets with different policy ids.");i.insert(o.AssetName.new(d(c.slice(56))),o.Int.from_str(e[c].toString()))});let u=o.ScriptHash.from_bytes(d(a));r.txBuilder.add_mint(u,i,t?o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(t)),void 0,void 0)):void 0)}),this}payToAddress(e,t){return this.tasks.push(r=>{let s=o.TransactionOutput.new(ve(e,r.lucid),Pe(t));r.txBuilder.add_output(s)}),this}payToAddressWithData(e,t,r){return this.tasks.push(s=>{if(typeof t=="string"&&(t={asHash:t}),[t.hash,t.asHash,t.inline].filter(u=>u).length>1)throw new Error("Not allowed to set hash, asHash and inline at the same time.");let a=o.TransactionOutput.new(ve(e,s.lucid),Pe(r));if(t.hash)a.set_datum(o.Datum.new_data_hash(o.DataHash.from_hex(t.hash)));else if(t.asHash){let u=o.PlutusData.from_bytes(d(t.asHash));a.set_datum(o.Datum.new_data_hash(o.hash_plutus_data(u))),s.txBuilder.add_plutus_data(u)}else if(t.inline){let u=o.PlutusData.from_bytes(d(t.inline));a.set_datum(o.Datum.new_data(o.Data.new(u)))}let i=t.scriptRef;i&&a.set_script_ref(We(i)),s.txBuilder.add_output(a)}),this}payToContract(e,t,r){if(typeof t=="string"&&(t={asHash:t}),!(t.hash||t.asHash||t.inline))throw new Error("No datum set. Script output becomes unspendable without datum.");return this.payToAddressWithData(e,t,r)}delegateTo(e,t,r){return this.tasks.push(s=>{let a=s.lucid.utils.getAddressDetails(e);if(a.type!=="Reward"||!a.stakeCredential)throw new Error("Not a reward address provided.");let i=a.stakeCredential.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_bytes(d(a.stakeCredential.hash))):o.StakeCredential.from_scripthash(o.ScriptHash.from_bytes(d(a.stakeCredential.hash)));s.txBuilder.add_certificate(o.Certificate.new_stake_delegation(o.StakeDelegation.new(i,o.Ed25519KeyHash.from_bech32(t))),r?o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(r)),void 0,void 0)):void 0)}),this}registerStake(e){return this.tasks.push(t=>{let r=t.lucid.utils.getAddressDetails(e);if(r.type!=="Reward"||!r.stakeCredential)throw new Error("Not a reward address provided.");let s=r.stakeCredential.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_bytes(d(r.stakeCredential.hash))):o.StakeCredential.from_scripthash(o.ScriptHash.from_bytes(d(r.stakeCredential.hash)));t.txBuilder.add_certificate(o.Certificate.new_stake_registration(o.StakeRegistration.new(s)),void 0)}),this}deregisterStake(e,t){return this.tasks.push(r=>{let s=r.lucid.utils.getAddressDetails(e);if(s.type!=="Reward"||!s.stakeCredential)throw new Error("Not a reward address provided.");let a=s.stakeCredential.type==="Key"?o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_bytes(d(s.stakeCredential.hash))):o.StakeCredential.from_scripthash(o.ScriptHash.from_bytes(d(s.stakeCredential.hash)));r.txBuilder.add_certificate(o.Certificate.new_stake_deregistration(o.StakeDeregistration.new(a)),t?o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(t)),void 0,void 0)):void 0)}),this}registerPool(e){return this.tasks.push(async t=>{let r=await Ct(e,t.lucid),s=o.Certificate.new_pool_registration(r);t.txBuilder.add_certificate(s,void 0)}),this}updatePool(e){return this.tasks.push(async t=>{let r=await Ct(e,t.lucid);r.set_is_update(!0);let s=o.Certificate.new_pool_registration(r);t.txBuilder.add_certificate(s,void 0)}),this}retirePool(e,t){return this.tasks.push(r=>{let s=o.Certificate.new_pool_retirement(o.PoolRetirement.new(o.Ed25519KeyHash.from_bech32(e),t));r.txBuilder.add_certificate(s,void 0)}),this}withdraw(e,t,r){return this.tasks.push(s=>{s.txBuilder.add_withdrawal(o.RewardAddress.from_address(ve(e,s.lucid)),o.BigNum.from_str(t.toString()),r?o.ScriptWitness.new_plutus_witness(o.PlutusWitness.new(o.PlutusData.from_bytes(d(r)),void 0,void 0)):void 0)}),this}addSigner(e){let t=this.lucid.utils.getAddressDetails(e);if(!t.paymentCredential&&!t.stakeCredential)throw new Error("Not a valid address.");let r=t.type==="Reward"?t.stakeCredential:t.paymentCredential;if(r.type==="Script")throw new Error("Only key hashes are allowed as signers.");return this.addSignerKey(r.hash)}addSignerKey(e){return this.tasks.push(t=>{t.txBuilder.add_required_signer(o.Ed25519KeyHash.from_bytes(d(e)))}),this}validFrom(e){return this.tasks.push(t=>{let r=t.lucid.utils.unixTimeToSlot(e);t.txBuilder.set_validity_start_interval(o.BigNum.from_str(r.toString()))}),this}validTo(e){return this.tasks.push(t=>{let r=t.lucid.utils.unixTimeToSlot(e);t.txBuilder.set_ttl(o.BigNum.from_str(r.toString()))}),this}attachMetadata(e,t){return this.tasks.push(r=>{r.txBuilder.add_json_metadatum(o.BigNum.from_str(e.toString()),JSON.stringify(t))}),this}attachMetadataWithConversion(e,t){return this.tasks.push(r=>{r.txBuilder.add_json_metadatum_with_schema(o.BigNum.from_str(e.toString()),JSON.stringify(t),o.MetadataJsonSchema.BasicConversions)}),this}addNetworkId(e){return this.tasks.push(t=>{t.txBuilder.set_network_id(o.NetworkId.from_bytes(d(e.toString(16).padStart(2,"0"))))}),this}attachSpendingValidator(e){return this.tasks.push(t=>{je(t,e)}),this}attachMintingPolicy(e){return this.tasks.push(t=>{je(t,e)}),this}attachCertificateValidator(e){return this.tasks.push(t=>{je(t,e)}),this}attachWithdrawalValidator(e){return this.tasks.push(t=>{je(t,e)}),this}compose(e){return e&&(this.tasks=this.tasks.concat(e.tasks)),this}async complete(e){if([e?.change?.outputData?.hash,e?.change?.outputData?.asHash,e?.change?.outputData?.inline].filter(a=>a).length>1)throw new Error("Not allowed to set hash, asHash and inline at the same time.");let t=this.tasks.shift();for(;t;)await t(this),t=this.tasks.shift();let r=await this.lucid.wallet.getUtxosCore(),s=ve(e?.change?.address||await this.lucid.wallet.address(),this.lucid);return(e?.coinSelection||e?.coinSelection===void 0)&&this.txBuilder.add_inputs_from(r,s,Uint32Array.from([200,1e3,1500,800,800,5e3])),this.txBuilder.balance(s,(()=>e?.change?.outputData?.hash?o.Datum.new_data_hash(o.DataHash.from_hex(e.change.outputData.hash)):e?.change?.outputData?.asHash?(this.txBuilder.add_plutus_data(o.PlutusData.from_bytes(d(e.change.outputData.asHash))),o.Datum.new_data_hash(o.hash_plutus_data(o.PlutusData.from_bytes(d(e.change.outputData.asHash))))):e?.change?.outputData?.inline?o.Datum.new_data(o.Data.new(o.PlutusData.from_bytes(d(e.change.outputData.inline)))):void 0)()),new xe(this.lucid,await this.txBuilder.construct(r,s,e?.nativeUplc===void 0?!0:e?.nativeUplc))}async toString(){let e=this.tasks.shift();for(;e;)await e(this),e=this.tasks.shift();return p(this.txBuilder.to_bytes())}};function je(n,{type:e,script:t}){if(e==="Native")return n.txBuilder.add_native_script(o.NativeScript.from_bytes(d(t)));if(e==="PlutusV1")return n.txBuilder.add_plutus_script(o.PlutusScript.from_bytes(d($(t))));if(e==="PlutusV2")return n.txBuilder.add_plutus_v2_script(o.PlutusScript.from_bytes(d($(t))));throw new Error("No variant matched.")}async function Ct(n,e){let t=o.Ed25519KeyHashes.new();n.owners.forEach(i=>{let{stakeCredential:u}=e.utils.getAddressDetails(i);if(u?.type==="Key")t.add(o.Ed25519KeyHash.from_hex(u.hash));else throw new Error("Only key hashes allowed for pool owners.")});let r=n.metadataUrl?await fetch(n.metadataUrl).then(i=>i.arrayBuffer()):null,s=r?o.PoolMetadataHash.from_bytes(o.hash_blake2b256(new Uint8Array(r))):null,a=o.Relays.new();return n.relays.forEach(i=>{switch(i.type){case"SingleHostIp":{let u=i.ipV4?o.Ipv4.new(new Uint8Array(i.ipV4.split(".").map(x=>parseInt(x)))):void 0,c=i.ipV6?o.Ipv6.new(d(i.ipV6.replaceAll(":",""))):void 0;a.add(o.Relay.new_single_host_addr(o.SingleHostAddr.new(i.port,u,c)));break}case"SingleHostDomainName":{a.add(o.Relay.new_single_host_name(o.SingleHostName.new(i.port,o.DNSRecordAorAAAA.new(i.domainName))));break}case"MultiHost":{a.add(o.Relay.new_multi_host_name(o.MultiHostName.new(o.DNSRecordSRV.new(i.domainName))));break}}}),o.PoolRegistration.new(o.PoolParams.new(o.Ed25519KeyHash.from_bech32(n.poolId),o.VRFKeyHash.from_hex(n.vrfKeyHash),o.BigNum.from_str(n.pledge.toString()),o.BigNum.from_str(n.cost.toString()),o.UnitInterval.from_float(n.margin),o.RewardAddress.from_address(ve(n.rewardAddress,e)),t,a,s?o.PoolMetadata.new(o.Url.new(n.metadataUrl),s):void 0))}function ve(n,e){let{type:t,networkId:r}=e.utils.getAddressDetails(n),s=ae(e.network);if(r!==s)throw new Error(`Invalid address: Expected address with network id ${s}, but got ${r}`);return t==="Byron"?o.ByronAddress.from_base58(n).to_address():o.Address.from_bech32(n)}function Et(n,e={addressType:"Base",accountIndex:0,network:"Mainnet"}){function t(f){if(typeof f!="number")throw new Error("Type number required here!");return 2147483648+f}let r=at(n),a=o.Bip32PrivateKey.from_bip39_entropy(d(r),e.password?new TextEncoder().encode(e.password):new Uint8Array).derive(t(1852)).derive(t(1815)).derive(t(e.accountIndex)),i=a.derive(0).derive(0).to_raw_key(),u=a.derive(2).derive(0).to_raw_key(),c=i.to_public().hash(),x=u.to_public().hash(),y=e.network==="Mainnet"?1:0,I=e.addressType==="Base"?o.BaseAddress.new(y,o.StakeCredential.from_keyhash(c),o.StakeCredential.from_keyhash(x)).to_address().to_bech32(void 0):o.EnterpriseAddress.new(y,o.StakeCredential.from_keyhash(c)).to_address().to_bech32(void 0),B=e.addressType==="Base"?o.RewardAddress.new(y,o.StakeCredential.from_keyhash(x)).to_address().to_bech32(void 0):null;return{address:I,rewardAddress:B,paymentKey:i.to_bech32(),stakeKey:e.addressType==="Base"?u.to_bech32():null}}function Tt(n,e,t){let r=[],s=n.body().inputs();for(let f=0;f<s.len();f++){let C=s.get(f),S=p(C.transaction_id().to_bytes()),w=parseInt(C.index().to_str()),O=t.find(A=>A.txHash===S&&A.outputIndex===w);if(O){let{paymentCredential:A}=N(O.address);r.push(A?.hash)}}let a=n.body();function i(f){let C=f.certs();if(C)for(let S=0;S<C.len();S++){let w=C.get(S);if(w.kind()===0)w.as_stake_registration()?.stake_credential()?.kind();else if(w.kind()===1){let O=w.as_stake_deregistration()?.stake_credential();if(O?.kind()===0){let A=p(O.to_keyhash().to_bytes());r.push(A)}}else if(w.kind()===2){let O=w.as_stake_delegation()?.stake_credential();if(O?.kind()===0){let A=p(O.to_keyhash().to_bytes());r.push(A)}}else if(w.kind()===3){let O=w.as_pool_registration()?.pool_params(),A=O?.pool_owners();if(!A)break;for(let P=0;P<A.len();P++){let Ie=p(A.get(P).to_bytes());r.push(Ie)}let q=O.operator().to_hex();r.push(q)}else if(w.kind()===4){let O=w.as_pool_retirement().pool_keyhash().to_hex();r.push(O)}else if(w.kind()===6){let O=w.as_move_instantaneous_rewards_cert()?.move_instantaneous_reward().as_to_stake_creds()?.keys();if(!O)break;for(let A=0;A<O.len();A++){let q=O.get(A);if(q.kind()===0){let P=p(q.to_keyhash().to_bytes());r.push(P)}}}}}a.certs()&&i(a);let u=a.withdrawals();function c(f){let C=f.keys();for(let S=0;S<C.len();S++){let w=C.get(S).payment_cred();w.kind()===0&&r.push(w.to_keyhash().to_hex())}}u&&c(u);let x=n.witness_set().native_scripts();function y(f){for(let C=0;C<f.len();C++){let S=f.get(C);if(S.kind()===0){let w=p(S.as_script_pubkey().addr_keyhash().to_bytes());r.push(w)}if(S.kind()===1){y(S.as_script_all().native_scripts());return}if(S.kind()===2){y(S.as_script_any().native_scripts());return}if(S.kind()===3){y(S.as_script_n_of_k().native_scripts());return}}}x&&y(x);let I=a.required_signers();if(I)for(let f=0;f<I.len();f++)r.push(p(I.get(f).to_bytes()));let B=a.collateral();if(B)for(let f=0;f<B.len();f++){let C=B.get(f),S=p(C.transaction_id().to_bytes()),w=parseInt(C.index().to_str()),O=t.find(A=>A.txHash===S&&A.outputIndex===w);if(O){let{paymentCredential:A}=N(O.address);r.push(A?.hash)}}return r.filter(f=>e.includes(f))}function Se(n,e,t){let r=E.HeaderMap.new();r.set_algorithm_id(E.Label.from_algorithm_id(E.AlgorithmId.EdDSA)),r.set_header(E.Label.new_text("address"),E.CBORValue.new_bytes(d(n)));let s=E.ProtectedHeaderMap.new(r),a=E.HeaderMap.new(),i=E.Headers.new(s,a),u=E.COSESign1Builder.new(i,d(e),!1),c=u.make_data_to_sign().to_bytes(),x=o.PrivateKey.from_bech32(t),y=x.sign(c).to_bytes(),I=u.build(y),B=E.COSEKey.new(E.Label.from_key_type(E.KeyType.OKP));return B.set_algorithm_id(E.Label.from_algorithm_id(E.AlgorithmId.EdDSA)),B.set_header(E.Label.new_int(E.Int.new_negative(E.BigNum.from_str("1"))),E.CBORValue.new_int(E.Int.new_i32(6))),B.set_header(E.Label.new_int(E.Int.new_negative(E.BigNum.from_str("2"))),E.CBORValue.new_bytes(x.to_public().as_bytes())),{signature:p(I.to_bytes()),key:p(B.to_bytes())}}function Bt(n,e,t,r){let s=E.COSESign1.from_bytes(d(r.signature)),a=E.COSEKey.from_bytes(d(r.key)),i=s.headers().protected().deserialized_headers(),u=(()=>{try{return p(i.header(E.Label.new_text("address"))?.as_bytes())}catch{throw new Error("No address found in signature.")}})(),c=(()=>{try{let w=i.algorithm_id()?.as_int();return w?.is_positive()?parseInt(w.as_positive()?.to_str()):parseInt(w?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Algorithm Id.")}})(),x=(()=>{try{let w=a.algorithm_id()?.as_int();return w?.is_positive()?parseInt(w.as_positive()?.to_str()):parseInt(w?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Algorithm Id.")}})(),y=(()=>{try{let w=a.header(E.Label.new_int(E.Int.new_negative(E.BigNum.from_str("1"))))?.as_int();return w?.is_positive()?parseInt(w.as_positive()?.to_str()):parseInt(w?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Curve.")}})(),I=(()=>{try{let w=a.key_type().as_int();return w?.is_positive()?parseInt(w.as_positive()?.to_str()):parseInt(w?.as_negative()?.to_str())}catch{throw new Error("Failed to retrieve Key Type.")}})(),B=(()=>{try{return o.PublicKey.from_bytes(a.header(E.Label.new_int(E.Int.new_negative(E.BigNum.from_str("2"))))?.as_bytes())}catch{throw new Error("No public key found.")}})(),f=(()=>{try{return p(s.payload())}catch{throw new Error("No payload found.")}})(),C=o.Ed25519Signature.from_bytes(s.signature()),S=s.signed_data(void 0,void 0).to_bytes();return u!==n||e!==B.hash().to_hex()||c!==x&&c!==E.AlgorithmId.EdDSA||y!==6||I!==1||f!==t?!1:B.verify(S,C)}var Me=class{constructor(e,t,r){Object.defineProperty(this,"lucid",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"address",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"payload",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.lucid=e,this.address=t,this.payload=r}sign(){return this.lucid.wallet.signMessage(this.address,this.payload)}signWithPrivateKey(e){let{paymentCredential:t,stakeCredential:r,address:{hex:s}}=this.lucid.utils.getAddressDetails(this.address),a=t?.hash||r?.hash,i=o.PrivateKey.from_bech32(e).to_public().hash().to_hex();if(!a||a!==i)throw new Error(`Cannot sign message for address: ${this.address}.`);return Se(s,this.payload,e)}};var Re=class{constructor(e,t=Qe){Object.defineProperty(this,"ledger",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"mempool",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"chain",{enumerable:!0,configurable:!0,writable:!0,value:{}}),Object.defineProperty(this,"blockHeight",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"slot",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"time",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"protocolParameters",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"datumTable",{enumerable:!0,configurable:!0,writable:!0,value:{}});let r="00".repeat(32);this.blockHeight=0,this.slot=0,this.time=Date.now(),this.ledger={},e.forEach(({address:s,assets:a},i)=>{this.ledger[r+i]={utxo:{txHash:r,outputIndex:i,address:s,assets:a},spent:!1}}),this.protocolParameters=t}now(){return this.time}awaitSlot(e=1){this.slot+=e,this.time+=e*1e3;let t=this.blockHeight;if(this.blockHeight=Math.floor(this.slot/20),this.blockHeight>t){for(let[r,{utxo:s,spent:a}]of Object.entries(this.mempool))this.ledger[r]={utxo:s,spent:a};for(let[r,{spent:s}]of Object.entries(this.ledger))s&&delete this.ledger[r];this.mempool={}}}awaitBlock(e=1){this.blockHeight+=e,this.slot+=e*20,this.time+=e*20*1e3;for(let[t,{utxo:r,spent:s}]of Object.entries(this.mempool))this.ledger[t]={utxo:r,spent:s};for(let[t,{spent:r}]of Object.entries(this.ledger))r&&delete this.ledger[t];this.mempool={}}getUtxos(e){let t=Object.values(this.ledger).flatMap(({utxo:r})=>{if(typeof e=="string")return e===r.address?r:[];{let{paymentCredential:s}=N(r.address);return s?.hash===e.hash?r:[]}});return Promise.resolve(t)}getProtocolParameters(){return Promise.resolve(this.protocolParameters)}getDatum(e){return Promise.resolve(this.datumTable[e])}getUtxosWithUnit(e,t){let r=Object.values(this.ledger).flatMap(({utxo:s})=>{if(typeof e=="string")return e===s.address&&s.assets[t]>0n?s:[];{let{paymentCredential:a}=N(s.address);return a?.hash===e.hash&&s.assets[t]>0n?s:[]}});return Promise.resolve(r)}getUtxosByOutRef(e){return Promise.resolve(e.flatMap(t=>this.ledger[t.txHash+t.outputIndex]?.utxo||[]))}getUtxoByUnit(e){let t=Object.values(this.ledger).flatMap(({utxo:r})=>r.assets[e]>0n?r:[]);if(t.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return Promise.resolve(t[0])}getDelegation(e){return Promise.resolve({poolId:this.chain[e]?.delegation?.poolId||null,rewards:this.chain[e]?.delegation?.rewards||0n})}awaitTx(e){return this.mempool[e+0]&&this.awaitBlock(),Promise.resolve(!0)}distributeRewards(e){for(let[t,{registeredStake:r,delegation:s}]of Object.entries(this.chain))r&&s.poolId&&(this.chain[t]={registeredStake:r,delegation:{poolId:s.poolId,rewards:s.rewards+=e}});this.awaitBlock()}submitTx(e){let t=o.Transaction.from_bytes(d(e)),r=t.body(),s=t.witness_set(),a=s.plutus_data(),i=o.hash_transaction(r).to_hex(),u=r.validity_start_interval()?parseInt(r.validity_start_interval().to_str()):null,c=r.ttl()?parseInt(r.ttl().to_str()):null;if(Number.isInteger(u)&&this.slot<u)throw new Error(`Lower bound (${u}) not in slot range (${this.slot}).`);if(Number.isInteger(c)&&this.slot>c)throw new Error(`Upper bound (${c}) not in slot range (${this.slot}).`);let x=(()=>{let l={};for(let h=0;h<(a?.len()||0);h++){let _=a.get(h),b=o.hash_plutus_data(_).to_hex();l[b]=p(_.to_bytes())}return l})(),y=new Set,I=(()=>{let l=[];for(let h=0;h<(s.vkeys()?.len()||0);h++){let _=s.vkeys().get(h),b=_.vkey().public_key(),T=b.hash().to_hex();if(!b.verify(d(i),_.signature()))throw new Error(`Invalid vkey witness. Key hash: ${T}`);l.push(T)}return l})(),B=o.Ed25519KeyHashes.new();I.forEach(l=>B.add(o.Ed25519KeyHash.from_hex(l)));let f=(()=>{let l=[];for(let h=0;h<(s.native_scripts()?.len()||0);h++){let _=s.native_scripts().get(h),b=_.hash(o.ScriptHashNamespace.NativeScript).to_hex();if(!_.verify(Number.isInteger(u)?o.BigNum.from_str(u.toString()):void 0,Number.isInteger(c)?o.BigNum.from_str(c.toString()):void 0,B))throw new Error(`Invalid native script witness. Script hash: ${b}`);for(let T=0;T<_.get_required_signers().len();T++){let R=_.get_required_signers().get(T).to_hex();y.add(R)}l.push(b)}return l})(),C={},S=[],w=(()=>{let l=[];for(let h=0;h<(s.plutus_scripts()?.len()||0);h++){let b=s.plutus_scripts().get(h).hash(o.ScriptHashNamespace.PlutusV1).to_hex();l.push(b)}for(let h=0;h<(s.plutus_v2_scripts()?.len()||0);h++){let b=s.plutus_v2_scripts().get(h).hash(o.ScriptHashNamespace.PlutusV2).to_hex();l.push(b)}return l})(),O=r.inputs();O.sort();let A=[];for(let l=0;l<O.len();l++){let h=O.get(l),_=h.transaction_id().to_hex()+h.index().to_str(),b=this.ledger[_],{entry:T,type:R}=b?{entry:b,type:"Ledger"}:{entry:this.mempool[_],type:"Mempool"};if(!T||T.spent)throw new Error(`Could not spend UTxO: ${JSON.stringify({txHash:T?.utxo.txHash,outputIndex:T?.utxo.outputIndex})}
It does not exist or was already spent.`);let te=T.utxo.scriptRef;if(te)switch(te.type){case"Native":{let he=o.NativeScript.from_bytes(d(te.script));C[he.hash(o.ScriptHashNamespace.NativeScript).to_hex()]=he;break}case"PlutusV1":{let he=o.PlutusScript.from_bytes(d(te.script));S.push(he.hash(o.ScriptHashNamespace.PlutusV1).to_hex());break}case"PlutusV2":{let he=o.PlutusScript.from_bytes(d(te.script));S.push(he.hash(o.ScriptHashNamespace.PlutusV2).to_hex());break}}T.utxo.datumHash&&y.add(T.utxo.datumHash),A.push({entry:T,type:R})}for(let l=0;l<(r.reference_inputs()?.len()||0);l++){let h=r.reference_inputs().get(l),_=h.transaction_id().to_hex()+h.index().to_str(),b=this.ledger[_]||this.mempool[_];if(!b||b.spent)throw new Error(`Could not read UTxO: ${JSON.stringify({txHash:b?.utxo.txHash,outputIndex:b?.utxo.outputIndex})}
It does not exist or was already spent.`);let T=b.utxo.scriptRef;if(T)switch(T.type){case"Native":{let R=o.NativeScript.from_bytes(d(T.script));C[R.hash(o.ScriptHashNamespace.NativeScript).to_hex()]=R;break}case"PlutusV1":{let R=o.PlutusScript.from_bytes(d(T.script));S.push(R.hash(o.ScriptHashNamespace.PlutusV1).to_hex());break}case"PlutusV2":{let R=o.PlutusScript.from_bytes(d(T.script));S.push(R.hash(o.ScriptHashNamespace.PlutusV2).to_hex());break}}b.utxo.datumHash&&y.add(b.utxo.datumHash)}let q=(()=>{let l={0:"Spend",1:"Mint",2:"Cert",3:"Reward"},h=[];for(let _=0;_<(s.redeemers()?.len()||0);_++){let b=s.redeemers().get(_);h.push({tag:l[b.tag().kind()],index:parseInt(b.index().to_str())})}return h})();function P(l,h,_){switch(l.type){case"Key":{if(!I.includes(l.hash))throw new Error(`Missing vkey witness. Key hash: ${l.hash}`);y.add(l.hash);break}case"Script":{if(f.includes(l.hash)){y.add(l.hash);break}else if(C[l.hash]){if(!C[l.hash].verify(Number.isInteger(u)?o.BigNum.from_str(u.toString()):void 0,Number.isInteger(c)?o.BigNum.from_str(c.toString()):void 0,B))throw new Error(`Invalid native script witness. Script hash: ${l.hash}`);break}else if((w.includes(l.hash)||S.includes(l.hash))&&q.find(b=>b.tag===h&&b.index===_)){y.add(l.hash);break}throw new Error(`Missing script witness. Script hash: ${l.hash}`)}}}for(let l=0;l<(r.collateral()?.len()||0);l++){let h=r.collateral().get(l),_=h.transaction_id().to_hex()+h.index().to_str(),b=this.ledger[_]||this.mempool[_];if(!b||b.spent)throw new Error(`Could not read UTxO: ${JSON.stringify({txHash:b?.utxo.txHash,outputIndex:b?.utxo.outputIndex})}
It does not exist or was already spent.`);let{paymentCredential:T}=N(b.utxo.address);if(T?.type==="Script")throw new Error("Collateral inputs can only contain vkeys.");P(T,null,null)}for(let l=0;l<(r.required_signers()?.len()||0);l++){let h=r.required_signers().get(l);P({type:"Key",hash:h.to_hex()},null,null)}for(let l=0;l<(r.mint()?.keys().len()||0);l++){let h=r.mint().keys().get(l).to_hex();P({type:"Script",hash:h},"Mint",l)}let Ie=[];for(let l=0;l<(r.withdrawals()?.keys().len()||0);l++){let h=r.withdrawals().keys().get(l),_=BigInt(r.withdrawals().get(h).to_str()),b=h.to_address().to_bech32(void 0),{stakeCredential:T}=N(b);if(P(T,"Reward",l),this.chain[b]?.delegation.rewards!==_)throw new Error("Withdrawal amount doesn't match actual reward balance.");Ie.push({rewardAddress:b,withdrawal:_})}let we=[];for(let l=0;l<(r.certs()?.len()||0);l++){let h=r.certs().get(l);switch(h.kind()){case 0:{let _=h.as_stake_registration(),b=o.RewardAddress.new(o.NetworkInfo.testnet().network_id(),_.stake_credential()).to_address().to_bech32(void 0);if(this.chain[b]?.registeredStake)throw new Error(`Stake key is already registered. Reward address: ${b}`);we.push({type:"Registration",rewardAddress:b});break}case 1:{let _=h.as_stake_deregistration(),b=o.RewardAddress.new(o.NetworkInfo.testnet().network_id(),_.stake_credential()).to_address().to_bech32(void 0),{stakeCredential:T}=N(b);if(P(T,"Cert",l),!this.chain[b]?.registeredStake)throw new Error(`Stake key is already deregistered. Reward address: ${b}`);we.push({type:"Deregistration",rewardAddress:b});break}case 2:{let _=h.as_stake_delegation(),b=o.RewardAddress.new(o.NetworkInfo.testnet().network_id(),_.stake_credential()).to_address().to_bech32(void 0),T=_.pool_keyhash().to_bech32("pool"),{stakeCredential:R}=N(b);if(P(R,"Cert",l),!this.chain[b]?.registeredStake&&!we.find(te=>te.type==="Registration"&&te.rewardAddress===b))throw new Error(`Stake key is not registered. Reward address: ${b}`);we.push({type:"Delegation",rewardAddress:b,poolId:T});break}}}A.forEach(({entry:{utxo:l}},h)=>{let{paymentCredential:_}=N(l.address);P(_,"Spend",h)});let Ht=(()=>{let l=[];for(let h=0;h<r.outputs().len();h++){let _=r.outputs().get(h),b=o.TransactionUnspentOutput.new(o.TransactionInput.new(o.TransactionHash.from_hex(i),o.BigNum.from_str(h.toString())),_),T=Oe(b);T.datumHash&&y.add(T.datumHash),l.push({utxo:T,spent:!1})}return l})(),[Fe]=I.filter(l=>!y.has(l));if(Fe)throw new Error(`Extraneous vkey witness. Key hash: ${Fe}`);let[Je]=f.filter(l=>!y.has(l));if(Je)throw new Error(`Extraneous native script. Script hash: ${Je}`);let[Xe]=w.filter(l=>!y.has(l));if(Xe)throw new Error(`Extraneous plutus script. Script hash: ${Xe}`);let[Ge]=Object.keys(x).filter(l=>!y.has(l));if(Ge)throw new Error(`Extraneous plutus data. Datum hash: ${Ge}`);A.forEach(({entry:l,type:h})=>{let _=l.utxo.txHash+l.utxo.outputIndex;l.spent=!0,h==="Ledger"?this.ledger[_]=l:h==="Mempool"&&(this.mempool[_]=l)}),Ie.forEach(({rewardAddress:l,withdrawal:h})=>{this.chain[l].delegation.rewards-=h}),we.forEach(({type:l,rewardAddress:h,poolId:_})=>{switch(l){case"Registration":{this.chain[h]?this.chain[h].registeredStake=!0:this.chain[h]={registeredStake:!0,delegation:{poolId:null,rewards:0n}};break}case"Deregistration":{this.chain[h].registeredStake=!1,this.chain[h].delegation.poolId=null;break}case"Delegation":this.chain[h].delegation.poolId=_}}),Ht.forEach(({utxo:l,spent:h})=>{this.mempool[l.txHash+l.outputIndex]={utxo:l,spent:h}});for(let[l,h]of Object.entries(x))this.datumTable[l]=h;return Promise.resolve(i)}log(){function e(s){let a=s==="lovelace"?"1":s,i=0;for(let y=0;y<a.length;y++)i+=a.charCodeAt(y);let u=i*123%256,c=i*321%256,x=i*213%256;return"#"+((1<<24)+(u<<16)+(c<<8)+x).toString(16).slice(1)}let t={},r={};for(let{utxo:s}of Object.values(this.ledger))for(let[a,i]of Object.entries(s.assets))r[s.address]?r[s.address]?.[a]?r[s.address][a]+=i:r[s.address][a]=i:r[s.address]={[a]:i},t[a]?t[a]+=i:t[a]=i;console.log(`
%cBlockchain state`,"color:purple"),console.log(`
    Block height:   %c${this.blockHeight}%c
    Slot:           %c${this.slot}%c
    Unix time:      %c${this.time}
  `,"color:yellow","color:white","color:yellow","color:white","color:yellow"),console.log(`
`);for(let[s,a]of Object.entries(r)){console.log(`Address: %c${s}`,"color:blue",`
`);for(let[i,u]of Object.entries(a)){let c=Math.max(Math.floor(60*(Number(u)/Number(t[i]))),1);console.log(`%c${"\u2586".repeat(c)+" ".repeat(60-c)}`,`color: ${e(i)}`,"",`${i}:`,u,"")}console.log(`
${"\u2581".repeat(60)}
`)}}};var $e=class{constructor(){Object.defineProperty(this,"txBuilderConfig",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"wallet",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"provider",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"network",{enumerable:!0,configurable:!0,writable:!0,value:"Mainnet"}),Object.defineProperty(this,"utils",{enumerable:!0,configurable:!0,writable:!0,value:void 0})}static async new(e,t){let r=new this;if(t&&(r.network=t),e){r.provider=e;let s=await e.getProtocolParameters();r.provider instanceof Re&&(r.network="Custom",ye[r.network]={zeroTime:r.provider.now(),zeroSlot:0,slotLength:1e3});let a=ye[r.network];r.txBuilderConfig=o.TransactionBuilderConfigBuilder.new().coins_per_utxo_byte(o.BigNum.from_str(s.coinsPerUtxoByte.toString())).fee_algo(o.LinearFee.new(o.BigNum.from_str(s.minFeeA.toString()),o.BigNum.from_str(s.minFeeB.toString()))).key_deposit(o.BigNum.from_str(s.keyDeposit.toString())).pool_deposit(o.BigNum.from_str(s.poolDeposit.toString())).max_tx_size(s.maxTxSize).max_value_size(s.maxValSize).collateral_percentage(s.collateralPercentage).max_collateral_inputs(s.maxCollateralInputs).max_tx_ex_units(o.ExUnits.new(o.BigNum.from_str(s.maxTxExMem.toString()),o.BigNum.from_str(s.maxTxExSteps.toString()))).ex_unit_prices(o.ExUnitPrices.from_float(s.priceMem,s.priceStep)).slot_config(o.BigNum.from_str(a.zeroTime.toString()),o.BigNum.from_str(a.zeroSlot.toString()),a.slotLength).blockfrost(o.Blockfrost.new((e?.url||"")+"/utils/txs/evaluate",e?.projectId||"")).costmdls(Ze(s.costModels)).build()}return r.utils=new Be(r),r}async switchProvider(e,t){if(this.network==="Custom")throw new Error("Cannot switch when on custom network.");let r=await $e.new(e,t);return this.txBuilderConfig=r.txBuilderConfig,this.provider=e||this.provider,this.network=t||this.network,this.wallet=r.wallet,this}newTx(){return new Ne(this)}fromTx(e){return new xe(this,o.Transaction.from_bytes(d(e)))}newMessage(e,t){return new Me(this,e,t)}verifyMessage(e,t,r){let{paymentCredential:s,stakeCredential:a,address:{hex:i}}=this.utils.getAddressDetails(e),u=s?.hash||a?.hash;if(!u)throw new Error("Not a valid address provided.");return Bt(i,u,t,r)}currentSlot(){return this.utils.unixTimeToSlot(Date.now())}utxosAt(e){return this.provider.getUtxos(e)}utxosAtWithUnit(e,t){return this.provider.getUtxosWithUnit(e,t)}utxoByUnit(e){return this.provider.getUtxoByUnit(e)}utxosByOutRef(e){return this.provider.getUtxosByOutRef(e)}delegationAt(e){return this.provider.getDelegation(e)}awaitTx(e,t=3e3){return this.provider.awaitTx(e,t)}async datumOf(e,t){if(!e.datum){if(!e.datumHash)throw new Error("This UTxO does not have a datum hash.");e.datum=await this.provider.getDatum(e.datumHash)}return ee.from(e.datum,t)}async metadataOf(e){let{policyId:t,name:r,label:s}=ke(e);switch(s){case 222:case 333:case 444:{let a=await this.utxoByUnit(St(t,r,100)),i=await this.datumOf(a);return ee.toJson(i.fields[0])}default:throw new Error("No variant matched.")}}selectWalletFromPrivateKey(e){let t=o.PrivateKey.from_bech32(e),r=t.to_public().hash();return this.wallet={address:async()=>o.EnterpriseAddress.new(this.network==="Mainnet"?1:0,o.StakeCredential.from_keyhash(r)).to_address().to_bech32(void 0),rewardAddress:async()=>null,getUtxos:async()=>await this.utxosAt(oe(await this.wallet.address())),getUtxosCore:async()=>{let s=await this.utxosAt(oe(await this.wallet.address())),a=o.TransactionUnspentOutputs.new();return s.forEach(i=>{a.add(de(i))}),a},getDelegation:async()=>({poolId:null,rewards:0n}),signTx:async s=>{let a=o.make_vkey_witness(o.hash_transaction(s.body()),t),i=o.TransactionWitnessSetBuilder.new();return i.add_vkey(a),i.build()},signMessage:async(s,a)=>{let{paymentCredential:i,address:{hex:u}}=this.utils.getAddressDetails(s),c=i?.hash,x=r.to_hex();if(!c||c!==x)throw new Error(`Cannot sign message for address: ${s}.`);return Se(u,a,e)},submitTx:async s=>await this.provider.submitTx(s)},this}selectWallet(e){let t=async()=>{let[r]=await e.getUsedAddresses();if(r)return r;let[s]=await e.getUnusedAddresses();return s};return this.wallet={address:async()=>o.Address.from_bytes(d(await t())).to_bech32(void 0),rewardAddress:async()=>{let[r]=await e.getRewardAddresses();return r?o.RewardAddress.from_address(o.Address.from_bytes(d(r))).to_address().to_bech32(void 0):null},getUtxos:async()=>(await e.getUtxos()||[]).map(s=>{let a=o.TransactionUnspentOutput.from_bytes(d(s));return Oe(a)}),getUtxosCore:async()=>{let r=o.TransactionUnspentOutputs.new();return(await e.getUtxos()||[]).forEach(s=>{r.add(o.TransactionUnspentOutput.from_bytes(d(s)))}),r},getDelegation:async()=>{let r=await this.wallet.rewardAddress();return r?await this.delegationAt(r):{poolId:null,rewards:0n}},signTx:async r=>{let s=await e.signTx(p(r.to_bytes()),!0);return o.TransactionWitnessSet.from_bytes(d(s))},signMessage:async(r,s)=>{let a=p(o.Address.from_bech32(r).to_bytes());return await e.signData(a,s)},submitTx:async r=>await e.submitTx(r)},this}selectWalletFrom({address:e,utxos:t,rewardAddress:r}){let s=this.utils.getAddressDetails(e);return this.wallet={address:async()=>e,rewardAddress:async()=>(!r&&s.stakeCredential?(()=>s.stakeCredential.type==="Key"?o.RewardAddress.new(this.network==="Mainnet"?1:0,o.StakeCredential.from_keyhash(o.Ed25519KeyHash.from_hex(s.stakeCredential.hash))).to_address().to_bech32(void 0):o.RewardAddress.new(this.network==="Mainnet"?1:0,o.StakeCredential.from_scripthash(o.ScriptHash.from_hex(s.stakeCredential.hash))).to_address().to_bech32(void 0))():r)||null,getUtxos:async()=>t||await this.utxosAt(oe(e)),getUtxosCore:async()=>{let a=o.TransactionUnspentOutputs.new();return(t||await this.utxosAt(oe(e))).forEach(i=>a.add(de(i))),a},getDelegation:async()=>{let a=await this.wallet.rewardAddress();return a?await this.delegationAt(a):{poolId:null,rewards:0n}},signTx:async()=>{throw new Error("Not implemented")},signMessage:async()=>{throw new Error("Not implemented")},submitTx:async a=>await this.provider.submitTx(a)},this}selectWalletFromSeed(e,t){let{address:r,rewardAddress:s,paymentKey:a,stakeKey:i}=Et(e,{addressType:t?.addressType||"Base",accountIndex:t?.accountIndex||0,password:t?.password,network:this.network}),u=o.PrivateKey.from_bech32(a).to_public().hash().to_hex(),c=i?o.PrivateKey.from_bech32(i).to_public().hash().to_hex():"",x={[u]:a,[c]:i};return this.wallet={address:async()=>r,rewardAddress:async()=>s||null,getUtxos:async()=>this.utxosAt(oe(r)),getUtxosCore:async()=>{let y=o.TransactionUnspentOutputs.new();return(await this.utxosAt(oe(r))).forEach(I=>y.add(de(I))),y},getDelegation:async()=>{let y=await this.wallet.rewardAddress();return y?await this.delegationAt(y):{poolId:null,rewards:0n}},signTx:async y=>{let I=await this.utxosAt(r),f=Tt(y,[u,c],I),C=o.TransactionWitnessSetBuilder.new();return f.forEach(S=>{let w=o.make_vkey_witness(o.hash_transaction(y.body()),o.PrivateKey.from_bech32(x[S]));C.add_vkey(w)}),C.build()},signMessage:async(y,I)=>{let{paymentCredential:B,stakeCredential:f,address:{hex:C}}=this.utils.getAddressDetails(y),S=B?.hash||f?.hash,w=x[S];if(!w)throw new Error(`Cannot sign message for address: ${y}.`);return Se(C,I,w)},submitTx:async y=>await this.provider.submitTx(y)},this}};var Pt=class{constructor(e,t){Object.defineProperty(this,"url",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"projectId",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.url=e,this.projectId=t||""}async getProtocolParameters(){let e=await fetch(`${this.url}/epochs/latest/parameters`,{headers:{project_id:this.projectId,lucid:W}}).then(t=>t.json());return{minFeeA:parseInt(e.min_fee_a),minFeeB:parseInt(e.min_fee_b),maxTxSize:parseInt(e.max_tx_size),maxValSize:parseInt(e.max_val_size),keyDeposit:BigInt(e.key_deposit),poolDeposit:BigInt(e.pool_deposit),priceMem:parseFloat(e.price_mem),priceStep:parseFloat(e.price_step),maxTxExMem:BigInt(e.max_tx_ex_mem),maxTxExSteps:BigInt(e.max_tx_ex_steps),coinsPerUtxoByte:BigInt(e.coins_per_utxo_size),collateralPercentage:parseInt(e.collateral_percent),maxCollateralInputs:parseInt(e.max_collateral_inputs),costModels:e.cost_models}}async getUtxos(e){let t=(()=>typeof e=="string"?e:e.type==="Key"?o.Ed25519KeyHash.from_hex(e.hash).to_bech32("addr_vkh"):o.ScriptHash.from_hex(e.hash).to_bech32("addr_vkh"))(),r=[],s=1;for(;;){let a=await fetch(`${this.url}/addresses/${t}/utxos?page=${s}`,{headers:{project_id:this.projectId,lucid:W}}).then(i=>i.json());if(a.error){if(a.status_code===404)return[];throw new Error("Could not fetch UTxOs from Blockfrost. Try again.")}if(r=r.concat(a),a.length<=0)break;s++}return this.blockfrostUtxosToUtxos(r)}async getUtxosWithUnit(e,t){let r=(()=>typeof e=="string"?e:e.type==="Key"?o.Ed25519KeyHash.from_hex(e.hash).to_bech32("addr_vkh"):o.ScriptHash.from_hex(e.hash).to_bech32("addr_vkh"))(),s=[],a=1;for(;;){let i=await fetch(`${this.url}/addresses/${r}/utxos/${t}?page=${a}`,{headers:{project_id:this.projectId,lucid:W}}).then(u=>u.json());if(i.error){if(i.status_code===404)return[];throw new Error("Could not fetch UTxOs from Blockfrost. Try again.")}if(s=s.concat(i),i.length<=0)break;a++}return this.blockfrostUtxosToUtxos(s)}async getUtxoByUnit(e){let t=await fetch(`${this.url}/assets/${e}/addresses?count=2`,{headers:{project_id:this.projectId,lucid:W}}).then(a=>a.json());if(!t||t.error)throw new Error("Unit not found.");if(t.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");let r=t[0].address,s=await this.getUtxosWithUnit(r,e);if(s.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return s[0]}async getUtxosByOutRef(e){let t=[...new Set(e.map(s=>s.txHash))];return(await Promise.all(t.map(async s=>{let a=await fetch(`${this.url}/txs/${s}/utxos`,{headers:{project_id:this.projectId,lucid:W}}).then(u=>u.json());if(!a||a.error)return[];let i=a.outputs.map(u=>({...u,tx_hash:s}));return this.blockfrostUtxosToUtxos(i)}))).reduce((s,a)=>s.concat(a),[]).filter(s=>e.some(a=>s.txHash===a.txHash&&s.outputIndex===a.outputIndex))}async getDelegation(e){let t=await fetch(`${this.url}/accounts/${e}`,{headers:{project_id:this.projectId,lucid:W}}).then(r=>r.json());return!t||t.error?{poolId:null,rewards:0n}:{poolId:t.pool_id||null,rewards:BigInt(t.withdrawable_amount)}}async getDatum(e){let t=await fetch(`${this.url}/scripts/datum/${e}/cbor`,{headers:{project_id:this.projectId,lucid:W}}).then(r=>r.json()).then(r=>r.cbor);if(!t||t.error)throw new Error(`No datum found for datum hash: ${e}`);return t}awaitTx(e,t=3e3){return new Promise(r=>{let s=setInterval(async()=>{let a=await fetch(`${this.url}/txs/${e}`,{headers:{project_id:this.projectId,lucid:W}}).then(i=>i.json());if(a&&!a.error)return clearInterval(s),await new Promise(i=>setTimeout(()=>i(1),1e3)),r(!0)},t)})}async submitTx(e){let t=await fetch(`${this.url}/tx/submit`,{method:"POST",headers:{"Content-Type":"application/cbor",project_id:this.projectId,lucid:W},body:d(e)}).then(r=>r.json());if(!t||t.error)throw t?.status_code===400?new Error(t.message):new Error("Could not submit transaction.");return t}async blockfrostUtxosToUtxos(e){return await Promise.all(e.map(async t=>({txHash:t.tx_hash,outputIndex:t.output_index,assets:Object.fromEntries(t.amount.map(({unit:r,quantity:s})=>[r,BigInt(s)])),address:t.address,datumHash:!t.inline_datum&&t.data_hash||void 0,datum:t.inline_datum||void 0,scriptRef:t.reference_script_hash?await(async()=>{let{type:r}=await fetch(`${this.url}/scripts/${t.reference_script_hash}`,{headers:{project_id:this.projectId,lucid:W}}).then(a=>a.json());if(r==="Native"||r==="native")throw new Error("Native script ref not implemented!");let{cbor:s}=await fetch(`${this.url}/scripts/${t.reference_script_hash}/cbor`,{headers:{project_id:this.projectId,lucid:W}}).then(a=>a.json());return{type:r==="plutusV1"?"PlutusV1":"PlutusV2",script:$(s)}})():void 0})))}};function qs(n){let e=t=>{if(isNaN(t.int)){if(t.bytes||!isNaN(Number(t.bytes)))return o.PlutusData.new_bytes(d(t.bytes));if(t.map){let r=o.PlutusMap.new();return t.map.forEach(({k:s,v:a})=>{r.insert(e(s),e(a))}),o.PlutusData.new_map(r)}else if(t.list){let r=o.PlutusList.new();return t.list.forEach(s=>{r.add(e(s))}),o.PlutusData.new_list(r)}else if(!isNaN(t.constructor)){let r=o.PlutusList.new();return t.fields.forEach(s=>{r.add(e(s))}),o.PlutusData.new_constr_plutus_data(o.ConstrPlutusData.new(o.BigNum.from_str(t.constructor.toString()),r))}}else return o.PlutusData.new_integer(o.BigInt.from_str(t.int.toString()));throw new Error("Unsupported type")};return p(e(n).to_bytes())}var W=me.version;var Ot=class{constructor(e,t){Object.defineProperty(this,"kupoUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"ogmiosUrl",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.kupoUrl=e,this.ogmiosUrl=t}async getProtocolParameters(){let e=await this.ogmiosWsp("Query",{query:"currentProtocolParameters"});return new Promise((t,r)=>{e.addEventListener("message",s=>{try{let{result:a}=JSON.parse(s.data),i={};Object.keys(a.costModels).forEach(I=>{let f="Plutus"+I.split(":")[1].toUpperCase();i[f]=a.costModels[I]});let[u,c]=a.prices.memory.split("/"),[x,y]=a.prices.steps.split("/");t({minFeeA:parseInt(a.minFeeCoefficient),minFeeB:parseInt(a.minFeeConstant),maxTxSize:parseInt(a.maxTxSize),maxValSize:parseInt(a.maxValueSize),keyDeposit:BigInt(a.stakeKeyDeposit),poolDeposit:BigInt(a.poolDeposit),priceMem:parseInt(u)/parseInt(c),priceStep:parseInt(x)/parseInt(y),maxTxExMem:BigInt(a.maxExecutionUnitsPerTransaction.memory),maxTxExSteps:BigInt(a.maxExecutionUnitsPerTransaction.steps),coinsPerUtxoByte:BigInt(a.coinsPerUtxoByte),collateralPercentage:parseInt(a.collateralPercentage),maxCollateralInputs:parseInt(a.maxCollateralInputs),costModels:i}),e.close()}catch(a){r(a)}},{once:!0})})}async getUtxos(e){let t=typeof e=="string",r=t?e:e.hash,s=await fetch(`${this.kupoUrl}/matches/${r}${t?"":"/*"}?unspent`).then(a=>a.json());return this.kupmiosUtxosToUtxos(s)}async getUtxosWithUnit(e,t){let r=typeof e=="string",s=r?e:e.hash,{policyId:a,assetName:i}=ke(t),u=await fetch(`${this.kupoUrl}/matches/${s}${r?"":"/*"}?unspent&policy_id=${a}${i?`&asset_name=${i}`:""}`).then(c=>c.json());return this.kupmiosUtxosToUtxos(u)}async getUtxoByUnit(e){let{policyId:t,assetName:r}=ke(e),s=await fetch(`${this.kupoUrl}/matches/${t}.${r?`${r}`:"*"}?unspent`).then(i=>i.json()),a=await this.kupmiosUtxosToUtxos(s);if(a.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return a[0]}async getUtxosByOutRef(e){let t=[...new Set(e.map(s=>s.txHash))];return(await Promise.all(t.map(async s=>{let a=await fetch(`${this.kupoUrl}/matches/*@${s}?unspent`).then(i=>i.json());return this.kupmiosUtxosToUtxos(a)}))).reduce((s,a)=>s.concat(a),[]).filter(s=>e.some(a=>s.txHash===a.txHash&&s.outputIndex===a.outputIndex))}async getDelegation(e){let t=await this.ogmiosWsp("Query",{query:{delegationsAndRewards:[e]}});return new Promise((r,s)=>{t.addEventListener("message",a=>{try{let{result:i}=JSON.parse(a.data),u=i?Object.values(i)[0]:{};r({poolId:u?.delegate||null,rewards:BigInt(u?.rewards||0)}),t.close()}catch(i){s(i)}},{once:!0})})}async getDatum(e){let t=await fetch(`${this.kupoUrl}/datums/${e}`).then(r=>r.json());if(!t||!t.datum)throw new Error(`No datum found for datum hash: ${e}`);return t.datum}awaitTx(e,t=3e3){return new Promise(r=>{let s=setInterval(async()=>{let a=await fetch(`${this.kupoUrl}/matches/*@${e}?unspent`).then(i=>i.json());if(a&&a.length>0)return clearInterval(s),await new Promise(i=>setTimeout(()=>i(1),1e3)),r(!0)},t)})}async submitTx(e){let t=await this.ogmiosWsp("SubmitTx",{submit:e});return new Promise((r,s)=>{t.addEventListener("message",a=>{try{let{result:i}=JSON.parse(a.data);i.SubmitSuccess?r(i.SubmitSuccess.txId):s(i.SubmitFail),t.close()}catch(i){s(i)}},{once:!0})})}kupmiosUtxosToUtxos(e){return Promise.all(e.map(async t=>({txHash:t.transaction_id,outputIndex:parseInt(t.output_index),address:t.address,assets:(()=>{let r={lovelace:BigInt(t.value.coins)};return Object.keys(t.value.assets).forEach(s=>{r[s.replace(".","")]=BigInt(t.value.assets[s])}),r})(),datumHash:t?.datum_type==="hash"?t.datum_hash:null,datum:t?.datum_type==="inline"?await this.getDatum(t.datum_hash):null,scriptRef:t.script_hash&&await(async()=>{let{script:r,language:s}=await fetch(`${this.kupoUrl}/scripts/${t.script_hash}`).then(a=>a.json());if(s==="native")return{type:"Native",script:r};if(s==="plutus:v1")return{type:"PlutusV1",script:p(o.PlutusScript.new(d(r)).to_bytes())};if(s==="plutus:v2")return{type:"PlutusV2",script:p(o.PlutusScript.new(d(r)).to_bytes())}})()})))}async ogmiosWsp(e,t){let r=new WebSocket(this.ogmiosUrl);return await new Promise(s=>{r.addEventListener("open",()=>s(1),{once:!0})}),r.send(JSON.stringify({type:"jsonwsp/request",version:"1.0",servicename:"ogmios",methodname:e,args:t})),r}};var At=class{constructor({network:e,apiKey:t,turboSubmit:r=!1}){Object.defineProperty(this,"url",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"apiKey",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),Object.defineProperty(this,"turboSubmit",{enumerable:!0,configurable:!0,writable:!0,value:void 0}),this.url=`https://${e}.gomaestro-api.org/v1`,this.apiKey=t,this.turboSubmit=r}async getProtocolParameters(){let t=(await fetch(`${this.url}/protocol-params`,{headers:this.commonHeaders()}).then(a=>a.json())).data,r=a=>{let i=a.indexOf("/");return parseInt(a.slice(0,i))/parseInt(a.slice(i+1))},s=(a,i)=>{let u=Object.keys(a).sort().map(c=>({[i[c]||c]:Object.fromEntries(Object.entries(a[c]).sort(([y,I],[B,f])=>y.localeCompare(B)))}));return Object.assign({},...u)};return{minFeeA:parseInt(t.min_fee_coefficient),minFeeB:parseInt(t.min_fee_constant),maxTxSize:parseInt(t.max_tx_size),maxValSize:parseInt(t.max_value_size),keyDeposit:BigInt(t.stake_key_deposit),poolDeposit:BigInt(t.pool_deposit),priceMem:r(t.prices.memory),priceStep:r(t.prices.steps),maxTxExMem:BigInt(t.max_execution_units_per_transaction.memory),maxTxExSteps:BigInt(t.max_execution_units_per_transaction.steps),coinsPerUtxoByte:BigInt(t.coins_per_utxo_byte),collateralPercentage:parseInt(t.collateral_percentage),maxCollateralInputs:parseInt(t.max_collateral_inputs),costModels:s(t.cost_models,{"plutus:v1":"PlutusV1","plutus:v2":"PlutusV2"})}}async getUtxos(e){let t=(()=>{if(typeof e=="string")return"/addresses/"+e;let a="/addresses/cred/";return a+=e.type==="Key"?o.Ed25519KeyHash.from_hex(e.hash).to_bech32("addr_vkh"):o.ScriptHash.from_hex(e.hash).to_bech32("addr_shared_vkh"),a})(),r=[],s=null;for(;;){let a=s===null?"":`&cursor=${s}`,i=await fetch(`${this.url}${t}/utxos?count=100${a}`,{headers:this.commonHeaders()}),u=await i.json();if(!i.ok)throw new Error("Could not fetch UTxOs from Maestro. Received status code: "+i.status);if(s=u.next_cursor,r=r.concat(u.data),s==null)break}return r.map(this.maestroUtxoToUtxo)}async getUtxosWithUnit(e,t){return(await this.getUtxos(e)).filter(s=>s.assets[t])}async getUtxoByUnit(e){let t=await fetch(`${this.url}/assets/${e}/addresses?count=2`,{headers:this.commonHeaders()}),r=await t.json();if(!t.ok)throw r.message?new Error(r.message):new Error("Couldn't perform query. Received status code: "+t.status);let s=r.data;if(s.length===0)throw new Error("Unit not found.");if(s.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");let a=s[0].address,i=await this.getUtxosWithUnit(a,e);if(i.length>1)throw new Error("Unit needs to be an NFT or only held by one address.");return i[0]}async getUtxosByOutRef(e){let t=await fetch(`${this.url}/transactions/outputs`,{method:"POST",headers:{"Content-Type":"application/json",...this.commonHeaders()},body:JSON.stringify(e.map(({txHash:s,outputIndex:a})=>`${s}#${a}`))});return t.ok?(await t.json()).data.map(this.maestroUtxoToUtxo):[]}async getDelegation(e){let t=await fetch(`${this.url}/accounts/${e}`,{headers:this.commonHeaders()});if(!t.ok)return{poolId:null,rewards:0n};let s=(await t.json()).data;return{poolId:s.delegated_pool||null,rewards:BigInt(s.rewards_available)}}async getDatum(e){let t=await fetch(`${this.url}/datum/${e}`,{headers:this.commonHeaders()});if(!t.ok)throw t.status===404?new Error(`No datum found for datum hash: ${e}`):new Error("Couldn't successfully perform query. Received status code: "+t.status);return(await t.json()).data.bytes}awaitTx(e,t=3e3){return new Promise(r=>{let s=setInterval(async()=>{let a=await fetch(`${this.url}/transactions/${e}/cbor`,{headers:this.commonHeaders()});if(a.ok)return await a.json(),clearInterval(s),await new Promise(i=>setTimeout(()=>i(1),1e3)),r(!0)},t)})}async submitTx(e){let t=`${this.url}/txmanager`;t+=this.turboSubmit?"/turbosubmit":"";let r=await fetch(t,{method:"POST",headers:{"Content-Type":"application/cbor",Accept:"text/plain",...this.commonHeaders()},body:d(e)}),s=await r.text();if(!r.ok)throw r.status===400?new Error(s):new Error("Could not submit transaction. Received status code: "+r.status);return s}commonHeaders(){return{"api-key":this.apiKey,lucid:cr}}maestroUtxoToUtxo(e){return{txHash:e.tx_hash,outputIndex:e.index,assets:(()=>{let t={};return e.assets.forEach(r=>{t[r.unit]=BigInt(r.amount)}),t})(),address:e.address,datumHash:e.datum?e.datum.type=="inline"?void 0:e.datum.hash:void 0,datum:e.datum?.bytes,scriptRef:e.reference_script?e.reference_script.type=="native"?void 0:{type:e.reference_script.type=="plutusv1"?"PlutusV1":"PlutusV2",script:$(e.reference_script.bytes)}:void 0}}},cr=me.version;export{Pt as Blockfrost,o as C,D as Constr,ee as Data,Re as Emulator,Ot as Kupmios,$e as Lucid,E as M,At as Maestro,Ue as MerkleTree,Qe as PROTOCOL_PARAMETERS_DEFAULT,ye as SLOT_CONFIG_NETWORK,Ne as Tx,xe as TxComplete,De as TxSigned,Be as Utils,Mr as addAssets,$ as applyDoubleCborEncoding,Nr as applyParamsToScript,Pe as assetsToValue,Ve as combineHash,It as concat,Oe as coreToUtxo,Ze as createCostModels,qs as datumJsonToCbor,Ae as equals,d as fromHex,ar as fromLabel,sr as fromScriptRef,kt as fromText,ke as fromUnit,er as generatePrivateKey,tr as generateSeedPhrase,N as getAddressDetails,or as nativeScriptFromJson,ae as networkToId,oe as paymentCredentialOf,He as sha256,mt as slotToBeginUnixTime,Qt as stakeCredentialOf,p as toHex,nr as toLabel,jr as toPublicKey,We as toScriptRef,Dr as toText,St as toUnit,pt as unixTimeToEnclosingSlot,de as utxoToCore,rr as valueToAssets};
